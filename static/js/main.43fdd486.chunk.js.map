{"version":3,"sources":["serviceWorker.js","components/TaskFormLopHoc.js","components/TaskItemLopHoc.js","components/TaskListLopHoc.js","QuanlyLopHoc.js","components/TaskFormMonHoc.js","components/TaskItemMonHoc.js","components/TaskListMonHoc.js","QuanLyMonHoc.js","components/TaskFormStudents.js","components/TaskItemStudents.js","components/TaskListStudents.js","QuanlyDiem.js","Danhsachquanly.js","components/TaskFormGiaovien.js","components/TaskItemGiaovien.js","components/TaskListGiaovien.js","QuanlyGiaovien.js","menu.js","index.js"],"names":["Boolean","window","location","hostname","match","TaskFormLopHoc","props","onChange","event","target","name","value","setState","ValidationTenKhoi","state","tenkhoi","isInputValid","errorMessageTenKhoi","ValidationTenlop","tenlop","errorMessageTenLop","ValidationGiaoVien","giaovien","errorMessageGiaoVien","ValidationChuyenMon","chuyenmon","errorMessageMonChuyen","onSubmit","preventDefault","onClearST","onCloseForm","this","tasks","className","onClick","type","onBlur","style","color","Component","TaskItemLopHoc","onDeleteLopHoc","task","id","onUpdateLopHoc","index","TaskListLopHoc","fitterName","elmTasks","map","key","LopHoc","onToggleForm","isDisplayForm","onClose","onReset","localStorage","setItem","JSON","stringify","data","console","log","generateID","push","onShowForm","findIndex","result","forEach","splice","taskEditing","getItem","parse","Math","floor","random","toString","substring","s4","elmTaskFromLopHoc","height","paddingLeft","TaskFormMonHoc","onClear","ValidationHT","monhoc","errorMessage","errorMessageHT","errorMessageMonDay","tasksS","TaskItemMonHoc","onDeleteMonHoc","onUpdateMonHoc","TaskListMonHoc","elmTasksS","MonHoc","elmTaskFromMonHoc","TaskFormStudents","onResetDiem","DM","D15","D60","DT","hoten","errorMessageDM","taskDiem","TaskItemStudents","onUpdate","tong","parseFloat","round","kq","TaskListStudents","Diem","onBar","isDisplaySideBar","onCancel","Tong","onDelete","elmTaskFromTeacher","Danhsachquanly","class","marginTop","padding","background","display","alignItems","justifyContent","fontSize","cursor","marginLeft","TaskFormGiaovien","Validationmonday","chucvu","monday","sdt","diachi","taskGiaovien","Validationdiachi","TaskItemGiaovien","onDeleteGiaovien","onUpdateGiaovien","TaskListGiaovien","Giaovien","elmTaskFromGiaovien","Menu","htmlFor","alt","href","to","activeStyle","path","component","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.43fdd486.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\r\n\r\n\r\nclass TaskFormLopHoc extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            tenkhoi : '',\r\n            tenlop: '',\r\n            giaovien: '',\r\n            chuyenmon: '',\r\n            isInputValid: true,\r\n            errorMessageTenKhoi: '' ,\r\n            errorMessageTenLop: '',\r\n            errorMessageGiaoVien: '',\r\n            errorMessageMonChuyen: ''\r\n        }\r\n    }\r\n    \r\n    onChange = (event) =>{\r\n        \r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n    \r\n    ValidationTenKhoi = (event) => {\r\n        if(this.state.tenkhoi ===''){\r\n            this.setState({\r\n                isInputValid : !this.state.isInputValid,\r\n                errorMessageTenKhoi : 'Vui lòng nhập tên khối'\r\n            })\r\n        }else {\r\n            this.setState({\r\n                isInputValid : this.state.isInputValid,\r\n                errorMessageTenKhoi : ''\r\n            })\r\n        }\r\n    }\r\n\r\n    ValidationTenlop = (event) => {\r\n        if(this.state.tenlop ===''){\r\n            this.setState({\r\n                isInputValid : !this.state.isInputValid,\r\n                errorMessageTenLop : 'Vui lòng nhập tên lớp'\r\n            })\r\n        }else {\r\n            this.setState({\r\n                isInputValid : this.state.isInputValid,\r\n                errorMessageTenLop : ''\r\n            })\r\n        }\r\n    }\r\n   \r\n    ValidationGiaoVien = (event) => {\r\n        if(this.state.giaovien ===''){\r\n            this.setState({\r\n                isInputValid : !this.state.isInputValid,\r\n                errorMessageGiaoVien : 'Vui lòng nhập tên giáo viên'\r\n            })\r\n        }else {\r\n            this.setState({\r\n                isInputValid : this.state.isInputValid,\r\n                errorMessageGiaoVien : ''\r\n            })\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        if(this.props.tasks){\r\n            this.setState({\r\n                tenkhoi : this.props.tasks.tenkhoi,\r\n                tenlop: this.props.tasks.tenlop,\r\n                giaovien: this.props.tasks.giaovien,\r\n                chuyenmon: this.props.tasks.chuyenmon\r\n            })\r\n        }\r\n    }\r\n\r\n    ValidationChuyenMon = (event) => {\r\n        if(this.state.chuyenmon ===''){\r\n            this.setState({\r\n                isInputValid : !this.state.isInputValid,\r\n                errorMessageMonChuyen : 'Vui lòng nhập môn dạy'\r\n            })\r\n        }else {\r\n            this.setState({\r\n                isInputValid : this.state.isInputValid,\r\n                errorMessageMonChuyen : ''\r\n            })\r\n        }\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n            this.props.onSubmit(this.state);\r\n        \r\n    }\r\n\r\n    onClearST = () => {\r\n        this.setState({\r\n            tenkhoi : '',\r\n            tenlop: '',\r\n            giaovien: '',\r\n            chuyenmon: ''\r\n        })\r\n    }\r\n\r\n    onCloseForm = () => {\r\n        this.props.onCloseForm();\r\n    }\r\n        render(){\r\n        \r\n           \r\n        return (\r\n            <div className=\"panel panel-danger\">\r\n            <div className=\"panel-heading\">\r\n                  <h3 className=\"panel-title\">Thêm lớp học\r\n                  <i className =\"fa fa-times-circle text-right\"\r\n                     onClick = {this.onCloseForm}></i></h3>\r\n            </div>\r\n            <div className=\"panel-body\">\r\n                   {/* Form input*/ }\r\n                   \r\n                   <form onSubmit = {this.onSubmit}>\r\n                       <div className=\"form-group invalid\">\r\n                           <label>Tên khối</label>\r\n                           <input type=\"text\" className=\"form-control\"\r\n                           name ='tenkhoi'\r\n                           value = {this.state.tenkhoi}\r\n                           onChange = {this.onChange}\r\n                           onBlur = {this.ValidationTenKhoi}\r\n                          />\r\n                            {this.state.tenkhoi === '' ? <span style = {{color : 'red'}}>           \r\n                               {this.state.errorMessageTenKhoi}\r\n                            </span> : null }\r\n                       </div>\r\n                       <div className=\"form-group\">\r\n                           <label>Tên lớp:</label>\r\n                           <input type=\"text\" className=\"form-control\"\r\n                           name = 'tenlop'\r\n                           value = {this.state.tenlop}\r\n                           onChange = {this.onChange}\r\n                           onBlur = {this.ValidationTenlop}/>\r\n                            {this.state.tenlop === '' ? <span style = {{color : 'red'}}>           \r\n                               {this.state.errorMessageTenLop}\r\n                            </span> : null }\r\n                       </div>\r\n                       <div className=\"form-group\">\r\n                           <label >Giáo viên chủ nhiệm</label>\r\n                           <input type=\"text\" className=\"form-control\"\r\n                           name = 'giaovien'\r\n                           value = {this.state.giaovien}\r\n                           onChange = {this.onChange}\r\n                           onBlur = {this.ValidationGiaoVien}/>\r\n                           {this.state.giaovien === '' ? <span style = {{color : 'red'}}>           \r\n                               {this.state.errorMessageGiaoVien}\r\n                            </span> : null } \r\n                       </div>\r\n                       <div className=\"form-group\">\r\n                           <label >Môn chuyên:</label>\r\n                           <input type=\"text\" className=\"form-control\"\r\n                           name = 'chuyenmon'\r\n                           value = {this.state.chuyenmon}\r\n                           onChange = {this.onChange}\r\n                           onBlur = {this.ValidationChuyenMon}/>\r\n                           {this.state.chuyenmon === '' ? <span style = {{color : 'red'}}>           \r\n                               {this.state.errorMessageMonChuyen}\r\n                            </span> : null }\r\n                       </div>\r\n                   \r\n                       \r\n                   <div className=\"text-center\">\r\n                       <button type=\"submit\" className=\"btn btn-warning\">\r\n                            <i className =\"fa fa-plus mr-5\"></i>Lưu</button>&nbsp;\r\n                       <button type=\"button\" className=\"btn btn-danger\" onClick = { this.onClearST}>\r\n                            <i className=\"fas fa-times mr-5\"></i>Xóa</button>\r\n                   </div>\r\n                   </form>\r\n                   \r\n            </div>\r\n      </div>\r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskFormLopHoc;","import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass TaskItemLopHoc extends Component {\r\n    \r\n        onDeleteLopHoc = () => {\r\n           this.props.onDeleteLopHoc(this.props.task.id);\r\n        }\r\n        \r\n        onUpdateLopHoc = () => {\r\n            this.props.onUpdateLopHoc(this.props.task.id); \r\n        }\r\n\r\n        \r\n        render(){\r\n        var {task,index } = this.props\r\n           \r\n        return (\r\n                    <tr>\r\n                            \r\n                            <td className = \"text-center\">{index + 1}</td>\r\n                            <td className = \"text-center\">{task.tenkhoi}</td>\r\n                            <td className = \"text-center\">{task.tenlop}</td>\r\n                            <td className = \"text-center\">{task.giaovien}</td>\r\n                            <td className = \"text-center\">{task.chuyenmon}</td>\r\n                            <td className =\"text-center\">\r\n                                \r\n                                <button type=\"button\" className=\"btn btn-warning\"  onClick = {this.onUpdateLopHoc}>\r\n                                    <i className=\"fas fa-pencil-alt mr-5\"></i>\r\n                                    Sửa</button>&nbsp;\r\n                                <button type=\"button\" className=\"btn btn-danger\"  onClick = {this.onDeleteLopHoc}>\r\n                                    <i className=\"fas fa-trash mr-5\"></i>\r\n                                    Xóa</button>\r\n                            </td>\r\n                    </tr>\r\n                         \r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskItemLopHoc;","import React, { Component } from 'react';\r\nimport TaskItemLopHoc from './TaskItemLopHoc'\r\n\r\n\r\nclass TaskListLopHoc extends Component {\r\n        constructor(props){\r\n            super(props);\r\n            this.state = {\r\n                fitterName: ''\r\n            }\r\n        }\r\n\r\n        render(){\r\n        var {tasks} = this.props\r\n        var elmTasks = tasks.map((task, index) =>{\r\n                return <TaskItemLopHoc  key ={index} index = {index}  task = {task}\r\n                onDeleteLopHoc = {this.props.onDeleteLopHoc}\r\n                onUpdateLopHoc = {this.props.onUpdateLopHoc}/>\r\n        })\r\n           \r\n        return (\r\n               <div>\r\n                    <table className=\"table table-bordered table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className = \"text-center\">STT</th>\r\n                            <th className = \"text-center\">Tên khối</th>\r\n                            <th className = \"text-center\">Tên lớp</th>\r\n                            <th className = \"text-center\">Giáo viên chủ nhiệm</th>\r\n                            <th className = \"text-center\">Chuyên môn</th>\r\n                            <th className = \"text-center\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { elmTasks}\r\n                        \r\n                    </tbody>\r\n                    </table>\r\n                    </div>      \r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskListLopHoc;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport TaskFormLopHoc from './components/TaskFormLopHoc'\r\nimport TaskListLopHoc from './components/TaskListLopHoc'\r\n\r\nclass LopHoc extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tasks: [],\r\n            isDisplayForm: false,\r\n        }\r\n    }\r\n\r\n\r\n    onToggleForm = () => {\r\n\r\n        this.setState({\r\n            isDisplayForm: !this.state.isDisplayForm\r\n        })\r\n\r\n    }\r\n\r\n    onCloseForm = () => {\r\n        this.setState({\r\n            isDisplayForm: !this.state.isDisplayForm\r\n        })\r\n    }\r\n\r\n    onClose = () => {\r\n        this.setState({\r\n            isDisplayForm: false\r\n        })\r\n    }\r\n\r\n    /* LocalStorage  */\r\n    componentDidMount() {\r\n        if (localStorage && localStorage.getItem('tasks')) {\r\n            var tasks = JSON.parse(localStorage.getItem('tasks'));\r\n            this.setState({\r\n                tasks: tasks\r\n            });\r\n        }\r\n    }\r\n\r\n    onReset = () => {\r\n        var tasks = []\r\n        this.setState({\r\n            tasks: tasks\r\n        })\r\n        localStorage.setItem('tasks', JSON.stringify(tasks));\r\n    }\r\n\r\n\r\n    s4() {\r\n        return Math.floor(1 + Math.random() * 0x10000).toString(16).substring(1);\r\n    }\r\n\r\n    generateID() {\r\n        return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-'\r\n            + this.s4() + this.s4() + this.s4();\r\n    }\r\n\r\n\r\n    onSubmit = (data) => {\r\n        console.log(data);\r\n        var { tasks } = this.state;\r\n        data.id = this.generateID();\r\n        if (data.tenkhoi !== \"\" && data.tenlop !== \"\" && data.giaovien !== \"\" && data.chuyenmon !== \"\") {\r\n            tasks.push(data);\r\n        }\r\n        this.setState({\r\n            tasks: tasks\r\n        })\r\n        localStorage.setItem('tasks', JSON.stringify(tasks));\r\n        this.onCloseForm();\r\n    }\r\n\r\n    onShowForm = () => {\r\n        this.setState({\r\n            isDisplayForm: true\r\n        })\r\n    }\r\n\r\n    onChange = (event) => {\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    findIndex = (id) => {\r\n        var { tasks } = this.state;\r\n        var result = -1;\r\n        tasks.forEach((task, index) => {\r\n            if (task.id === id) {\r\n\r\n                result = index;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    onDeleteLopHoc = (id) => {\r\n        var { tasks } = this.state;\r\n        var index = this.findIndex(id);\r\n        if (index !== -1) {\r\n            tasks.splice(index, 1);\r\n            this.setState({\r\n                tasks: tasks\r\n            });\r\n            localStorage.setItem('tasks', JSON.stringify(tasks));\r\n        }\r\n        this.onClose();\r\n    }\r\n\r\n    onUpdateLopHoc = (id) => {\r\n        var { tasks } = this.state;\r\n        var index = this.findIndex(id);\r\n        var taskEditing = tasks[index];\r\n        this.setState({\r\n            taskEditing: taskEditing\r\n        })\r\n        this.onShowForm();\r\n    }\r\n    render() {\r\n\r\n        var { isDisplayForm, tasks, taskEditing } = this.state;\r\n\r\n        var elmTaskFromLopHoc = isDisplayForm\r\n            ? <TaskFormLopHoc\r\n                onCloseForm={this.onCloseForm}\r\n                onSubmit={this.onSubmit}\r\n                tasks={taskEditing}\r\n            />\r\n            : \"\"\r\n\r\n\r\n        return (\r\n            //   <div>\r\n\r\n            // menu\r\n\r\n\r\n            <div className='Form-app'>\r\n                <div className=\"abc\">\r\n                    <div className=\"row\" style={{height : '100%'}}>\r\n                        <h1>Danh sách các lớp học</h1>\r\n                        <div className={isDisplayForm ? \"col-xs-3 col-sm-3 col-md-3 col-lg-3 mt-50\" : \"\"}>\r\n                            { /* Form Add LopHoc */}\r\n                            {elmTaskFromLopHoc}\r\n\r\n                        </div>\r\n\r\n                        <div className={isDisplayForm\r\n                            ? \"col-xs-9 col-sm-9 col-md-9 col-lg-9 mt-50\"\r\n                            : \"col-xs-12 col-sm-12 col-md-12 col-lg-12 mt-50\"}\r\n                        //  className = {isDisplaySideBar === false \r\n                        //         ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8 abcd mt-50\" \r\n                        //         : \"col-xs-10 col-sm-10 col-md-10 col-lg-10 abcd mt-50\"}\r\n                        >\r\n\r\n\r\n\r\n\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\" style={{ paddingLeft: 0 }}>\r\n                                <button type=\"button\"\r\n\r\n                                    className=\"btn btn-primary mb-5 \"\r\n                                    onClick={this.onToggleForm}\r\n                                >\r\n                                    <i className=\"fas fa-plus mr-5\"></i>\r\n                                                        Thêm lớp học\r\n                                                    </button>&nbsp;\r\n                                                   </div>\r\n\r\n\r\n                            {/* <button type=\"button\" \r\n                                                            className=\"btn btn-danger mb-5 \"\r\n                                                            onClick = {this.onReset}>\r\n                                                        \r\n                                                        Reset All\r\n                                                    </button> */}\r\n\r\n                            {/* Task List*/}\r\n                            <TaskListLopHoc tasks={tasks}\r\n                                onDeleteLopHoc={this.onDeleteLopHoc}\r\n                                onUpdateLopHoc={this.onUpdateLopHoc} />\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n            //    </div>\r\n\r\n\r\n\r\n            //   </div>       \r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default LopHoc;","import React, { Component } from 'react';\r\n\r\n\r\nclass TaskFormMonHoc extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            id:'',\r\n            monhoc: '',\r\n            isInputValid: true,\r\n            errorMessageHT: '' ,\r\n            errorMessageMonDay: ''\r\n        }\r\n    }\r\n    \r\n    onChange = (event) =>{\r\n        \r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value\r\n        this.onClear();\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n    \r\n    componentDidMount() {\r\n        if(this.props.tasksS){\r\n            this.setState({\r\n                id: this.props.tasksS.id,\r\n                monhoc : this.props.tasksS.monhoc  \r\n            })\r\n        }\r\n    }\r\n    \r\n    ValidationHT = (event) => {\r\n        if(this.state.monhoc ===''){\r\n            this.setState({\r\n                isInputValid : !this.state.isInputValid,\r\n                errorMessage : 'Vui lòng nhập môn học'\r\n            })\r\n        }else {\r\n            this.setState({\r\n                isInputValid : this.state.isInputValid,\r\n                errorMessage : ''\r\n            })\r\n        }\r\n    }\r\n\r\n    onCloseForm = () => {\r\n        this.props.onCloseForm();\r\n    }\r\n   \r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        \r\n    }\r\n\r\n    onClear = () =>  {\r\n          this.setState({\r\n              monhoc : ''\r\n          })\r\n    }\r\n    \r\n  \r\n        render(){\r\n        \r\n           \r\n        return (\r\n            \r\n            <div className=\"panel panel-danger\">\r\n            <div className=\"panel-heading\">\r\n                  <h3 className=\"panel-title\">Thêm môn học\r\n                  <i className =\"fa fa-times-circle text-right\"\r\n                     onClick = {this.onCloseForm}></i>\r\n                  </h3>\r\n            </div>\r\n            <div className=\"panel-body\">\r\n                   {/* Form input*/ }\r\n                   \r\n                   <form onSubmit = {this.onSubmit}>\r\n                       <div className=\"form-group invalid\">\r\n                           <label>Tên môn học:</label>\r\n                           <input type=\"text\" className=\"form-control mt-10\"\r\n                           name ='monhoc'\r\n                           value = {this.state.monhoc}\r\n                           onChange = {this.onChange}\r\n                           onBlur = {this.ValidationHT}\r\n                          />\r\n                            {this.state.monhoc === '' ? <span style = {{color : 'red'}}>           \r\n                               {this.state.errorMessage}\r\n                            </span> : null }\r\n                       </div>\r\n                       \r\n                        <div className=\"text-center\">\r\n                            <button type=\"submit\" className=\"btn btn-warning\">\r\n                                    <i className =\"fa fa-plus mr-5\"></i>Lưu</button>&nbsp;\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick = {this.onClear}>\r\n                                    <i className=\"fas fa-times mr-5\"></i>Xóa</button>\r\n                        </div>\r\n                   </form>\r\n                   \r\n            </div>\r\n      </div>\r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskFormMonHoc;","import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass TaskItemMonHoc extends Component {\r\n     \r\n\r\n    onDeleteMonHoc = () => {\r\n        this.props.onDeleteMonHoc(this.props.tasksS.id);\r\n    }\r\n    onUpdateMonHoc = () => {\r\n        this.props.onUpdateMonHoc(this.props.tasksS.id); \r\n    }\r\n        render(){\r\n        var {tasksS,index } = this.props;\r\n        return (\r\n                    <tr>\r\n                            \r\n                            <td className = \"text-center\">{index + 1}</td>\r\n                            <td className = \"text-center\">{tasksS.monhoc}</td>\r\n                            \r\n                            \r\n                            <td className =\"text-center\">\r\n                                \r\n                                <button type=\"button\" className=\"btn btn-warning\" onClick = {this.onUpdateMonHoc}>\r\n                                    <i className=\"fas fa-pencil-alt mr-5\"></i>\r\n                                    Sửa</button>&nbsp;\r\n                                <button type=\"button\" className=\"btn btn-danger\" onClick = {this.onDeleteMonHoc}>\r\n                                    <i className=\"fas fa-trash mr-5\"></i> \r\n                                    Xóa</button>\r\n                            </td>\r\n                    </tr>\r\n                         \r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskItemMonHoc;","import React, { Component } from 'react';\r\nimport TaskItemMonHoc from './TaskItemMonHoc'\r\n\r\n\r\nclass TaskListMonHoc extends Component {\r\n    \r\n\r\n        render(){\r\n        var {tasksS} = this.props\r\n        var elmTasksS = tasksS.map((tasksS, index) =>{\r\n                return <TaskItemMonHoc  key ={index} index = {index}  tasksS = {tasksS}\r\n                             onUpdateMonHoc = {this.props.onUpdateMonHoc}\r\n                             onDeleteMonHoc = {this.props.onDeleteMonHoc}/>\r\n        })\r\n           \r\n        return (\r\n               <div>\r\n                    <table className=\"table table-bordered table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className = 'text-center'>STT</th>\r\n                            <th className = 'text-center'>Môn học</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { elmTasksS}\r\n                        \r\n                    </tbody>\r\n                    </table>\r\n                    </div>      \r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskListMonHoc;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport TaskFormMonHoc from './components/TaskFormMonHoc'\r\nimport TaskListMonHoc from './components/TaskListMonHoc'\r\n\r\nclass MonHoc extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tasksS: [\r\n                {\r\n                    id:this.generateID(),\r\n                    monhoc:'Toán'\r\n\r\n                },\r\n                {\r\n                    id:this.generateID(),\r\n                    monhoc:'Anh văn'\r\n\r\n                },\r\n                {\r\n                    id:this.generateID(),\r\n                    monhoc:'Vật lý'\r\n\r\n                },\r\n                {\r\n                    id:this.generateID(),\r\n                    monhoc:'Ngữ văn'\r\n\r\n                },\r\n                {\r\n                    id:this.generateID(),\r\n                    monhoc:'Hóa học'\r\n\r\n                }\r\n            ],\r\n            isDisplayForm: false\r\n        }\r\n    }\r\n    \r\n    onToggleForm = () => {\r\n\r\n        this.setState({\r\n            isDisplayForm: !this.state.isDisplayForm\r\n        })\r\n\r\n    }\r\n\r\n    onShowForm = () => {\r\n        this.setState({\r\n            isDisplayForm: true\r\n        })\r\n    }\r\n\r\n    onCloseForm = () => {\r\n        this.setState({\r\n            isDisplayForm: !this.state.isDisplayForm\r\n        })\r\n    }\r\n\r\n    onClose = () => {\r\n        this.setState({\r\n            isDisplayForm: false\r\n        })\r\n    }\r\n    onReset = () => {\r\n        var tasksS = [\r\n            {\r\n                id:this.generateID(),\r\n                monhoc:'Toán'\r\n\r\n            },\r\n            {\r\n                id:this.generateID(),\r\n                monhoc:'Anh văn'\r\n\r\n            },\r\n            {\r\n                id:this.generateID(),\r\n                monhoc:'Vật lý'\r\n\r\n            },\r\n            {\r\n                id:this.generateID(),\r\n                monhoc:'Ngữ văn'\r\n\r\n            },\r\n            {\r\n                id:this.generateID(),\r\n                monhoc:'Hóa học'\r\n\r\n            }\r\n\r\n        ]\r\n        this.setState({\r\n            tasksS: tasksS\r\n        })\r\n        localStorage.setItem('tasksS', JSON.stringify(tasksS));\r\n    }\r\n    /* LocalStorage  */\r\n    componentDidMount() {\r\n        if (localStorage && localStorage.getItem('tasksS')) {\r\n            var tasksS = JSON.parse(localStorage.getItem('tasksS'));\r\n            this.setState({\r\n                tasksS: tasksS\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    s4() {\r\n        return Math.floor(1 + Math.random() * 0x10000).toString(16).substring(1);\r\n    }\r\n\r\n    generateID() {\r\n        return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-'\r\n            + this.s4() + this.s4() + this.s4();\r\n    }\r\n\r\n\r\n    onSubmit = (data) => {\r\n        var { tasksS } = this.state;\r\n        data.id = this.generateID();\r\n        if (data.monhoc !== '') {\r\n            tasksS.push(data);\r\n        }\r\n        this.setState({\r\n            tasksS: tasksS\r\n        })\r\n        localStorage.setItem('tasksS', JSON.stringify(tasksS));\r\n        this.onCloseForm();\r\n    }\r\n\r\n\r\n\r\n\r\n    findIndex = (id) => {\r\n        var { tasksS } = this.state;\r\n        var result = -1;\r\n        tasksS.forEach((task, index) => {\r\n            if (task.id === id) {\r\n\r\n                result = index;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    onUpdateMonHoc = (id) => {\r\n        var { tasksS } = this.state;\r\n        var index = this.findIndex(id);\r\n        var taskEditing = tasksS[index];\r\n        this.setState({\r\n            taskEditing: taskEditing\r\n        })\r\n        this.onShowForm();\r\n    }\r\n\r\n    onDeleteMonHoc = (id) => {\r\n        var { tasksS } = this.state;\r\n        var index = this.findIndex(id);\r\n        if (index !== -1) {\r\n            tasksS.splice(index, 1);\r\n            this.setState({\r\n                tasksS: tasksS\r\n            });\r\n            localStorage.setItem('tasksS', JSON.stringify(tasksS));\r\n        }\r\n        this.onClose();\r\n    }\r\n    render() {\r\n\r\n        var { tasksS , isDisplayForm, taskEditing} = this.state;\r\n        \r\n        var elmTaskFromMonHoc = isDisplayForm\r\n            ? <TaskFormMonHoc\r\n                onCloseForm={this.onCloseForm}\r\n                onSubmit={this.onSubmit}\r\n                tasksS={taskEditing}\r\n            />\r\n            : \"\"\r\n\r\n        return (\r\n\r\n\r\n\r\n            <div className='Form-app-monhoc'>\r\n                <div className=\"abc\">\r\n                    <div className=\"row\">\r\n                        <h1 className='text-center'>Quản lý môn học</h1>\r\n                        <div className={isDisplayForm ? \"col-xs-6 col-sm-4 col-md-4 col-lg-4 mt-50\" : \"\"}>\r\n                            { /* Form Add LopHoc */}\r\n                            {elmTaskFromMonHoc}\r\n\r\n                        </div>\r\n\r\n                        <div className={isDisplayForm\r\n                            ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8 mt-50\"\r\n                            : \"col-xs-12 col-sm-8 col-md-6 col-lg-6 mt-50\"}\r\n                        >\r\n\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\" style={{ paddingLeft: 0 }}>\r\n                                <button type=\"button\"\r\n\r\n                                    className=\"btn btn-primary mb-5 \"\r\n                                    onClick={this.onToggleForm}\r\n                                >\r\n                                    <i className=\"fas fa-plus mr-5\"></i>\r\n                                                        Thêm môn học\r\n                                                    </button>\r\n                                                   </div>\r\n                            <br />\r\n                            <br />\r\n                            {/* <button type=\"button\" \r\n                                                    className=\"btn btn-danger mb-5 \"\r\n                                                    onClick = {this.onReset}>\r\n                                                 \r\n                                                Làm mới điểm\r\n                                            </button> */}\r\n\r\n                            <div className=\"panel panel-primary panel-class\">\r\n                                <div className=\"panel-heading\">\r\n                                    <h3 className=\"panel-title\">Danh sách môn học</h3>\r\n                                </div>\r\n                                <div className=\"panel-body\">\r\n                                    {/* Task List*/}\r\n                                    <TaskListMonHoc tasksS={tasksS}\r\n                                        onUpdateMonHoc={this.onUpdateMonHoc}\r\n                                        onDeleteMonHoc={this.onDeleteMonHoc} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default MonHoc;","import React, { Component } from 'react';\r\n\r\n\r\nclass TaskFormStudents extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            id : '',\r\n            hoten : '',\r\n            DM: '',\r\n            D15: '',\r\n            D60: '',\r\n            DT: '',\r\n            \r\n            isInputValid: true,\r\n            errorMessageHT: '' ,\r\n            errorMessageDM: ''\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        if(this.props.taskDiem){\r\n            this.setState({\r\n                id : this.props.taskDiem.id,\r\n                hoten : this.props.taskDiem.hoten,\r\n                DM : this.props.taskDiem.DM,\r\n                D15 : this.props.taskDiem.D15,\r\n                D60 : this.props.taskDiem.D60,\r\n                DT : this.props.taskDiem.DT\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    onChange = (event) =>{\r\n        \r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value\r\n        console.log(typeof value)\r\n        \r\n            this.setState({\r\n                [name]: value\r\n            })\r\n        \r\n        \r\n    }\r\n    \r\n    // ValidationHT = (event) => {\r\n    //     if(this.state.hoten ===''){\r\n    //         this.setState({\r\n    //             isInputValid : !this.state.isInputValid,\r\n    //             errorMessage : 'Vui lòng nhập trường này'\r\n    //         })\r\n    //     }else {\r\n    //         this.setState({\r\n    //             isInputValid : this.state.isInputValid,\r\n    //             errorMessage : ''\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    \r\n   \r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        \r\n    }\r\n    \r\n    onCloseForm = () => {\r\n        this.props.onCloseForm();\r\n    }\r\n\r\n    onResetDiem = () => {\r\n        this.setState({\r\n            DM: '',\r\n            D15: '',\r\n            D60: '',\r\n            DT: ''\r\n        })\r\n    }\r\n        render(){\r\n        \r\n           \r\n        return (\r\n            <div className=\"panel panel-danger\">\r\n            <div className=\"panel-heading\">\r\n                  <h3 className=\"panel-title\">Chỉnh sửa điểm\r\n                  <i className =\"fa fa-times-circle text-right\"\r\n                     onClick = {this.onCloseForm}></i></h3>\r\n            </div>\r\n            <div className=\"panel-body\">\r\n                   {/* Form input*/ }\r\n                   \r\n                   <form onSubmit = {this.onSubmit}>\r\n                       <div className=\"form-group invalid text-center mb-10\">\r\n                       <label>{this.props.taskDiem.hoten}</label>\r\n                        \r\n                       </div>\r\n                       <div className=\"form-group\">\r\n                           <label>Nhập điểm miệng:</label>\r\n                           <input type=\"text\" className=\"form-control\"\r\n                           name = 'DM'\r\n                           value = {this.state.DM}\r\n                           onChange = {this.onChange}\r\n                        //    onBlur = {this.ValidationDM}\r\n                        />\r\n                            {/* {this.state.DM ? <span style = {{color : 'red'}}>           \r\n                               {this.state.errorMessageDM}\r\n                            </span> : null } */}\r\n                       </div>\r\n                       <div className=\"form-group\">\r\n                           <label >Nhập điểm 15p:</label>\r\n                           <input  type=\"text\" className=\"form-control\"\r\n                           name = 'D15'\r\n                           value = {this.state.D15}\r\n                           onChange = {this.onChange}\r\n                        //    onBlur = {this.Validation}\r\n                        />\r\n                            \r\n                       </div>\r\n                       <div className=\"form-group\">\r\n                           <label >Nhập điểm 1 tiết:</label>\r\n                           <input type=\"text\" className=\"form-control\"\r\n                           name = 'D60'\r\n                           value = {this.state.D60}\r\n                           onChange = {this.onChange}/>\r\n                       </div>\r\n                       <div className=\"form-group\">\r\n                           <label >Nhập điểm thi:</label>\r\n                           <input type=\"text\" className=\"form-control\"\r\n                           name = 'DT'\r\n                           value = {this.state.DT}\r\n                           onChange = {this.onChange}/>\r\n                       </div>\r\n                       \r\n                   \r\n                       \r\n                   <div className=\"text-center\">\r\n                       <button type=\"submit\" className=\"btn btn-warning\">\r\n                            <i className =\"fa fa-plus mr-5\"></i>Lưu</button>&nbsp;\r\n                       <button type=\"button\" className=\"btn btn-danger\"  onClick = {this.onResetDiem}>\r\n                            <i className=\"fas fa-times mr-5\"></i>Xóa</button>\r\n                   </div>\r\n                   </form>\r\n                   \r\n            </div>\r\n      </div>\r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskFormStudents;","import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass TaskItemStudents extends Component {\r\n   \r\n    \r\n    onUpdate = () => {\r\n        this.props.onUpdate(this.props.taskDiem.id);\r\n        \r\n    }\r\n\r\n        render(){\r\n        var {taskDiem,index } = this.props;\r\n        var DM = parseFloat(taskDiem.DM);\r\n        var D15 = parseFloat(taskDiem.D15);\r\n        var D60 = parseFloat(taskDiem.D60);\r\n        var DT = parseFloat(taskDiem.DT);\r\n        var tong = (DM + D15 + D60*2 + DT*3)/7;\r\n        var result = Math.round(tong *10)/10;\r\n       var kq = (taskDiem.DM === null || taskDiem.D15 === null || taskDiem.D60 === null || taskDiem.DT === null) ? result === null : result\r\n\r\n        \r\n        return (\r\n                    <tr>\r\n                            \r\n                            <td className = \"text-center\">{index + 1}</td>\r\n                            <td className = \"text-center\">{taskDiem.hoten}</td>\r\n                            <td className = \"text-center\">{taskDiem.DM}</td>\r\n                            <td className = \"text-center\">{taskDiem.D15}</td>\r\n                            <td className = \"text-center\">{taskDiem.D60}</td>\r\n                            <td className = \"text-center\">{taskDiem.DT}</td>\r\n                            <td className = \"text-center\">{ kq}</td>\r\n                            \r\n                            <td className =\"text-center\">\r\n                                \r\n                                <button type=\"button\" className=\"btn btn-warning\" onClick = {this.onUpdate}>\r\n                                    <i className=\"fas fa-pencil-alt mr-5\"></i>\r\n                                   Thêm/Sửa điểm</button>&nbsp;\r\n                                \r\n                            </td>\r\n                    </tr>\r\n                         \r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskItemStudents;","import React, { Component } from 'react';\r\nimport TaskItemStudents from './TaskItemStudents'\r\n\r\n\r\nclass TaskListStudents extends Component {\r\n    \r\n\r\n        render(){\r\n        var {taskDiem} = this.props\r\n        var elmTasks = taskDiem.map((taskDiem, index) =>{\r\n                return <TaskItemStudents  key ={index} index = {index}  taskDiem = {taskDiem}\r\n                                          \r\n                                          onUpdate = {this.props.onUpdate}/>\r\n        })\r\n           \r\n        return (\r\n               <div>\r\n                    <table className=\"table table-bordered table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className = \"text-center\">STT</th>\r\n                            <th className = \"text-center\">Họ tên</th>\r\n                            <th className = \"text-center\">Điểm miệng</th>\r\n                            <th className = \"text-center\">Điểm 15p</th>\r\n                            <th className = \"text-center\">Điểm  1 tiết</th>\r\n                            <th className = \"text-center\">Điểm thi</th>\r\n                            <th className = \"text-center\">Điểm trung bình</th>\r\n                            <th className = \"text-center\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { elmTasks}\r\n                        \r\n                    </tbody>\r\n                    </table>\r\n                    </div>      \r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskListStudents;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport TaskFormStudents from './components/TaskFormStudents'\r\nimport TaskListStudents from './components/TaskListStudents'\r\n\r\nclass Diem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            taskDiem: [\r\n                {\r\n                    id: this.generateID,\r\n                    hoten: \"Bùi Xuân Huấn\",\r\n                    DM: null,\r\n                    D15: null,\r\n                    D60: null,\r\n                    DT: null,\r\n                    Tong: null\r\n\r\n                },\r\n                {\r\n                    id: this.generateID(),\r\n                    hoten: 'Trần Đức Bo',\r\n                    DM: null,\r\n                    D15: null,\r\n                    D60: null,\r\n                    DT: null,\r\n                    Tong: null\r\n\r\n                },\r\n                {\r\n                    id: this.generateID(),\r\n                    hoten: 'Anh Ngạn',\r\n                    DM: null,\r\n                    D15: null,\r\n                    D60: null,\r\n                    DT: null,\r\n                    Tong: null\r\n\r\n                },\r\n                {\r\n                    id: this.generateID(),\r\n                    hoten: 'Ngô Bá Khá',\r\n                    DM: null,\r\n                    D15: null,\r\n                    D60: null,\r\n                    DT: null,\r\n                    Tong: null\r\n\r\n                },\r\n                {\r\n                    id: this.generateID(),\r\n                    hoten: 'Phùng Đức Trọng',\r\n                    DM: null,\r\n                    D15: null,\r\n                    D60: null,\r\n                    DT: null,\r\n                    Tong: null\r\n\r\n                },\r\n                {\r\n                    id: this.generateID(),\r\n                    hoten: 'Hoàng Lộc',\r\n                    DM: null,\r\n                    D15: null,\r\n                    D60: null,\r\n                    DT: null,\r\n                    Tong: null\r\n\r\n                },\r\n                {\r\n                    id: this.generateID(),\r\n                    hoten: 'Nguyễn Văn Linh',\r\n                    DM: null,\r\n                    D15: null,\r\n                    D60: null,\r\n                    DT: null,\r\n                    Tong: null\r\n\r\n                },\r\n                {\r\n                    id: this.generateID(),\r\n                    hoten: 'Hồ Văn Hà',\r\n                    DM: null,\r\n                    D15: null,\r\n                    D60: null,\r\n                    DT: null,\r\n                    Tong: null\r\n\r\n                },\r\n\r\n            ],\r\n            isDisplaySideBar: false,\r\n            isDisplayForm: false,\r\n            taskEditing: null\r\n        }\r\n    }\r\n\r\n\r\n    onBar = () => {\r\n        this.setState({\r\n            isDisplaySideBar: !this.state.isDisplaySideBar\r\n        })\r\n    }\r\n\r\n    onCancel = () => {\r\n        this.setState({\r\n            isDisplaySideBar: !this.state.isDisplaySideBar\r\n        })\r\n    }\r\n\r\n\r\n\r\n    onCloseForm = () => {\r\n        this.setState({\r\n            isDisplayForm: !this.state.isDisplayForm\r\n        })\r\n    }\r\n    onShowForm = () => {\r\n        this.setState({\r\n            isDisplayForm: true\r\n        })\r\n    }\r\n    /* LocalStorage  */\r\n    componentDidMount() {\r\n        if (localStorage && localStorage.getItem('taskDiem')) {\r\n            var taskDiem = JSON.parse(localStorage.getItem('taskDiem'));\r\n            this.setState({\r\n                taskDiem: taskDiem\r\n            });\r\n        }\r\n    }\r\n\r\n    onReset = () => {\r\n        var taskDiem = [\r\n\r\n            {\r\n                id: this.generateID,\r\n                hoten: \"Bùi Xuân Huấn\",\r\n                DM: null,\r\n                D15: null,\r\n                D60: null,\r\n                DT: null,\r\n                Tong: null\r\n\r\n            },\r\n            {\r\n                id: this.generateID(),\r\n                hoten: 'Trần Đức Bo',\r\n                DM: null,\r\n                D15: null,\r\n                D60: null,\r\n                DT: null,\r\n                Tong: null\r\n\r\n            },\r\n            {\r\n                id: this.generateID(),\r\n                hoten: 'Anh Ngạn',\r\n                DM: null,\r\n                D15: null,\r\n                D60: null,\r\n                DT: null,\r\n                Tong: null\r\n\r\n            },\r\n            {\r\n                id: this.generateID(),\r\n                hoten: 'Ngô Bá Khá',\r\n                DM: null,\r\n                D15: null,\r\n                D60: null,\r\n                DT: null,\r\n                Tong: null\r\n\r\n            },\r\n            {\r\n                id: this.generateID(),\r\n                hoten: 'Phùng Đức Trọng',\r\n                DM: null,\r\n                D15: null,\r\n                D60: null,\r\n                DT: null,\r\n                Tong: null\r\n\r\n            },\r\n            {\r\n                id: this.generateID(),\r\n                hoten: 'Hoàng Lộc',\r\n                DM: null,\r\n                D15: null,\r\n                D60: null,\r\n                DT: null,\r\n                Tong: null\r\n\r\n            },\r\n            {\r\n                id: this.generateID(),\r\n                hoten: 'Nguyễn Văn Linh',\r\n                DM: null,\r\n                D15: null,\r\n                D60: null,\r\n                DT: null,\r\n                Tong: null\r\n\r\n            },\r\n            {\r\n                id: this.generateID(),\r\n                hoten: 'Hồ Văn Hà',\r\n                DM: null,\r\n                D15: null,\r\n                D60: null,\r\n                DT: null,\r\n                Tong: null\r\n\r\n            },\r\n\r\n        ]\r\n        this.setState({\r\n            taskDiem: taskDiem\r\n        })\r\n        localStorage.setItem('taskDiem', JSON.stringify(taskDiem));\r\n    }\r\n    sinhdiem() {\r\n        return Math.round((Math.random() * 10) * 10) / 10;\r\n    }\r\n\r\n\r\n    s4() {\r\n        return Math.floor(1 + Math.random() * 0x10000).toString(16).substring(1);\r\n    }\r\n\r\n    generateID() {\r\n        return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-'\r\n            + this.s4() + this.s4() + this.s4();\r\n    }\r\n\r\n\r\n    onSubmit = (data) => {\r\n\r\n        var { taskDiem } = this.state;\r\n        if (data.id === '') {\r\n            data.id = this.generateID();\r\n            // if(data.hoten !==''){\r\n            //     taskDiem.push(data);\r\n            // }\r\n\r\n        } else {\r\n            //Editing\r\n            if (data.hoten !== '') {\r\n                var index = this.findIndex(data.id);\r\n                taskDiem[index] = data;\r\n            }\r\n\r\n        }\r\n        this.setState({\r\n            taskDiem: taskDiem\r\n        })\r\n        localStorage.setItem('taskDiem', JSON.stringify(taskDiem));\r\n        if (data.hoten !== '') {\r\n            this.onCloseForm();\r\n        }\r\n    }\r\n\r\n    findIndex = (id) => {\r\n        var { taskDiem } = this.state;\r\n        var result = -1;\r\n        taskDiem.forEach((task, index) => {\r\n            if (task.id === id) {\r\n\r\n                result = index;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    onDelete = (id) => {\r\n        var { taskDiem } = this.state;\r\n        var index = this.findIndex(id);\r\n        if (index !== -1) {\r\n            taskDiem.splice(index, 1);\r\n            this.setState({\r\n                taskDiem: taskDiem\r\n            });\r\n            localStorage.setItem('taskDiem', JSON.stringify(taskDiem));\r\n        }\r\n\r\n    }\r\n\r\n    onUpdate = (id) => {\r\n        var { taskDiem } = this.state;\r\n        var index = this.findIndex(id);\r\n        var taskEditing = taskDiem[index];\r\n        this.setState({\r\n            taskEditing: taskEditing\r\n        })\r\n        this.onShowForm();\r\n    }\r\n\r\n    render() {\r\n\r\n        var { isDisplayForm, taskDiem, taskEditing } = this.state;\r\n        var elmTaskFromTeacher = isDisplayForm\r\n            ? <TaskFormStudents\r\n                onCloseForm={this.onCloseForm}\r\n                onSubmit={this.onSubmit}\r\n                taskDiem={taskEditing}\r\n            />\r\n            : \"\"\r\n        return (\r\n            <div className='Form-app-diem'>\r\n                <div className=\"abc\">\r\n                    <div className=\"row\">\r\n                        <h1>Quản lý điểm môn Toán lớp 12b5</h1>\r\n                        <div className={isDisplayForm ? \"col-xs-12 col-sm-12 col-md-3 col-lg-3 mt-50\" : \"\"}>\r\n                            { /* Form Add Teacher */}\r\n                            {elmTaskFromTeacher}\r\n\r\n                        </div>\r\n\r\n                        <div className={isDisplayForm\r\n                            ? \"col-xs-9 col-sm-9 col-md-9 col-lg-9 mt-50\"\r\n                            : \"col-xs-12 col-sm-12 col-md-12 col-lg-12 mt-50\"}\r\n                        //  className = {isDisplaySideBar === false \r\n                        //         ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8 abcd mt-50\" \r\n                        //         : \"col-xs-10 col-sm-10 col-md-10 col-lg-10 abcd mt-50\"}\r\n                        >\r\n\r\n                            {/* <button type=\"button\" \r\n                                                    className=\"btn btn-primary mb-5 \"\r\n                                                    onClick = {this.onToggleForm}>\r\n                                                 <i className=\"fas fa-plus mr-5\"></i>\r\n                                                Thêm học sinh\r\n                                            </button>&nbsp; */}\r\n\r\n                            {/* <button type=\"button\" \r\n                                                    className=\"btn btn-danger mb-5 \"\r\n                                                    onClick = {this.onReset}>\r\n                                                 \r\n                                                Làm mới điểm\r\n                                            </button> */}\r\n\r\n\r\n                            <div className=\"panel panel-primary panel-diem\">\r\n                                <div className=\"panel-heading\">\r\n                                    <h3 className=\"panel-title\">Giáo viên dạy: Phan Tấn Trung</h3>\r\n                                </div>\r\n                                <div className=\"panel-body\">\r\n\r\n                                    {/* Task List*/}\r\n                                    <TaskListStudents taskDiem={taskDiem}\r\n                                        onDelete={this.onDelete}\r\n                                        onUpdate={this.onUpdate} />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div >\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Diem;","import React, { Component } from 'react';\r\n\r\nclass Danhsachquanly extends Component {\r\n    render() {\r\n        return (\r\n            <div className='Form-box'>\r\n           \r\n\r\n                <div class=\"row\" style={{ marginTop: '100px' }}>\r\n                    <div class=\"col-xs-12 col-sm-6 col-md-3 col-lg-3\" style={{ padding: '0' }}>\r\n                        <div className='box' style={{ background: '#00c0ef' }}>\r\n                            <div style={{ height: '120px', display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                                <div class=\"font-size-name\">\r\n                                    <p>3</p>\r\n                                    <h4>Giáo viên</h4>\r\n                                </div>\r\n                                <div>\r\n                                    <i class=\"fas fa-users icon-box\"></i>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ color: 'white', fontSize: '15px' , cursor:'pointer' }}>\r\n                                Chi tiết\r\n                             <i class=\"fas fa-arrow-circle-right\" style={{ marginLeft: '5px' }}></i>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-xs-12 col-sm-6 col-md-3 col-lg-3\" style={{ padding: '0' }}>\r\n                        <div className='box' style={{ background: '#00a65a' }}>\r\n                            <div style={{ height: '120px', display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                                <div class=\"font-size-name\">\r\n                                    <p>5</p>\r\n                                    <h4>Môn học</h4>\r\n                                </div>\r\n                                <div>\r\n                                    <i class=\"fas fa-book-open icon-box\"></i>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ color: 'white', fontSize: '15px', cursor:'pointer' }}>\r\n                                Chi tiết\r\n                             <i class=\"fas fa-arrow-circle-right\" style={{ marginLeft: '5px' }}></i>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-xs-12 col-sm-6 col-md-3 col-lg-3\" style={{ padding: '0' }}>\r\n                        <div className='box' style={{ background: '#f39c11' }}>\r\n                            <div style={{ height: '120px', display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                                <div class=\"font-size-name\">\r\n                                    <p>20</p>\r\n                                    <h4>Học sinh</h4>\r\n                                </div>\r\n                                <div>\r\n                                    <i class=\"fas fa-user-plus icon-box\"></i>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ color: 'white', fontSize: '15px' , cursor:'pointer' }}>\r\n                                Chi tiết\r\n                             <i class=\"fas fa-arrow-circle-right\" style={{ marginLeft: '5px' }}></i>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-xs-12 col-sm-6 col-md-3 col-lg-3\" style={{ padding: '0' }}>\r\n                        <div className='box' style={{ background: '#dd4c39' }}>\r\n                            <div style={{ height: '120px', display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                                <div class=\"font-size-name\">\r\n                                    <p>1</p>\r\n                                    <h4>Tin tức</h4>\r\n                                </div>\r\n                                <div>\r\n                                    <i class=\"fas fa-chart-pie icon-box\"></i>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ color: 'white', fontSize: '15px' , cursor:'pointer' }}>\r\n                                Chi tiết\r\n                             <i class=\"fas fa-arrow-circle-right\" style={{ marginLeft: '5px' }}></i>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Danhsachquanly;","import React, { Component } from 'react';\r\n\r\n\r\nclass TaskFormGiaovien extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            giaovien: '',\r\n            monday: '',\r\n            chucvu: '',\r\n            sdt: '',\r\n            diachi: '',\r\n            isInputValid: true,\r\n            errorMessageTenKhoi: '' ,\r\n            errorMessageTenLop: '',\r\n            errorMessageGiaoVien: '',\r\n            errorMessageMonChuyen: ''\r\n        }\r\n    }\r\n    \r\n    onChange = (event) =>{\r\n        \r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n    \r\n    ValidationTenKhoi = (event) => {\r\n        if(this.state.tenkhoi ===''){\r\n            this.setState({\r\n                isInputValid : !this.state.isInputValid,\r\n                errorMessageTenKhoi : 'Vui lòng nhập tên khối'\r\n            })\r\n        }else {\r\n            this.setState({\r\n                isInputValid : this.state.isInputValid,\r\n                errorMessageTenKhoi : ''\r\n            })\r\n        }\r\n    }\r\n\r\n    ValidationTenlop = (event) => {\r\n        if(this.state.tenlop ===''){\r\n            this.setState({\r\n                isInputValid : !this.state.isInputValid,\r\n                errorMessageTenLop : 'Vui lòng nhập tên lớp'\r\n            })\r\n        }else {\r\n            this.setState({\r\n                isInputValid : this.state.isInputValid,\r\n                errorMessageTenLop : ''\r\n            })\r\n        }\r\n    }\r\n   \r\n    ValidationGiaoVien = (event) => {\r\n        if(this.state.giaovien ===''){\r\n            this.setState({\r\n                isInputValid : !this.state.isInputValid,\r\n                errorMessageGiaoVien : 'Vui lòng nhập tên giáo viên'\r\n            })\r\n        }else {\r\n            this.setState({\r\n                isInputValid : this.state.isInputValid,\r\n                errorMessageGiaoVien : ''\r\n            })\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        if(this.props.taskGiaovien){\r\n            this.setState({\r\n                tenkhoi : this.props.taskGiaovien.tenkhoi,\r\n                tenlop: this.props.taskGiaovien.tenlop,\r\n                giaovien: this.props.taskGiaovien.giaovien,\r\n                chucvu: this.props.taskGiaovien.chucvu\r\n            })\r\n        }\r\n    }\r\n\r\n    Validationmonday = (event) => {\r\n        if(this.state.chucvu ===''){\r\n            this.setState({\r\n                isInputValid : !this.state.isInputValid,\r\n                errorMessageMonChuyen : 'Vui lòng nhập môn dạy'\r\n            })\r\n        }else {\r\n            this.setState({\r\n                isInputValid : this.state.isInputValid,\r\n                errorMessageMonChuyen : ''\r\n            })\r\n        }\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n            this.props.onSubmit(this.state);\r\n        \r\n    }\r\n\r\n    onClearST = () => {\r\n        this.setState({\r\n            tenkhoi : '',\r\n            tenlop: '',\r\n            giaovien: '',\r\n            chucvu: ''\r\n        })\r\n    }\r\n\r\n    onCloseForm = () => {\r\n        this.props.onCloseForm();\r\n    }\r\n        render(){\r\n        \r\n           \r\n        return (\r\n            <div className=\"panel panel-danger\">\r\n            <div className=\"panel-heading\">\r\n                  <h3 className=\"panel-title\">Thêm giáo viên\r\n                  <i className =\"fa fa-times-circle text-right\"\r\n                     onClick = {this.onCloseForm}></i></h3>\r\n            </div>\r\n            <div className=\"panel-body\">\r\n                   {/* Form input*/ }\r\n                   \r\n                   <form onSubmit = {this.onSubmit}>\r\n                       \r\n\r\n                       <div className=\"form-group\">\r\n                           <label >Họ tên:</label>\r\n                           <input type=\"text\" className=\"form-control\"\r\n                           name = 'giaovien'\r\n                           value = {this.state.giaovien}\r\n                           onChange = {this.onChange}\r\n                           onBlur = {this.ValidationGiaoVien}/>\r\n                           {this.state.giaovien === '' ? <span style = {{color : 'red'}}>           \r\n                               {this.state.errorMessageGiaoVien}\r\n                            </span> : null } \r\n                       </div>\r\n                       <div className=\"form-group\">\r\n                           <label >Chuyên môn:</label>\r\n                           <input type=\"text\" className=\"form-control\"\r\n                           name = 'monday'\r\n                           value = {this.state.monday}\r\n                           onChange = {this.onChange}\r\n                           onBlur = {this.Validationmonday}/>\r\n                           {this.state.monday === '' ? <span style = {{color : 'red'}}>           \r\n                               {this.state.errorMessageMonChuyen}\r\n                            </span> : null }\r\n                       </div>\r\n                       <div className=\"form-group\">\r\n                           <label >Chủ nhiệm lớp:</label>\r\n                           <input type=\"text\" className=\"form-control\"\r\n                           name = 'chucvu'\r\n                           value = {this.state.chucvu}\r\n                           onChange = {this.onChange}\r\n                           onBlur = {this.ValidationGiaoVien}/>\r\n                          \r\n                       </div>\r\n                       <div className=\"form-group\">\r\n                           <label >Email:</label>\r\n                           <input type=\"text\" className=\"form-control\"\r\n                           name = 'sdt'\r\n                           value = {this.state.sdt}\r\n                           onChange = {this.onChange}\r\n                           onBlur = {this.ValidationGiaoVien}/>\r\n                          \r\n                       </div>\r\n                       <div className=\"form-group\">\r\n                           <label >SĐT:</label>\r\n                           <input type=\"text\" className=\"form-control\"\r\n                           name = 'diachi'\r\n                           value = {this.state.diachi}\r\n                           onChange = {this.onChange}\r\n                           onBlur = {this.Validationdiachi}/>\r\n                           \r\n                       </div>\r\n                   \r\n                       \r\n                   <div className=\"text-center\">\r\n                       <button type=\"submit\" className=\"btn btn-warning\">\r\n                            <i className =\"fa fa-plus mr-5\"></i>Lưu</button>&nbsp;\r\n                       <button type=\"button\" className=\"btn btn-danger\" onClick = { this.onClearST}>\r\n                            <i className=\"fas fa-times mr-5\"></i>Xóa</button>\r\n                   </div>\r\n                   </form>\r\n                   \r\n            </div>\r\n      </div>\r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskFormGiaovien;","import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass TaskItemGiaovien extends Component {\r\n    \r\n        onDeleteGiaovien = () => {\r\n           this.props.onDeleteGiaovien(this.props.task.id);\r\n        }\r\n        \r\n        onUpdateGiaovien = () => {\r\n            this.props.onUpdateGiaovien(this.props.task.id); \r\n        }\r\n\r\n        \r\n        render(){\r\n        var {task,index } = this.props\r\n           \r\n        return (\r\n                    <tr>\r\n                            \r\n                            <td className = \"text-center\">{index + 1}</td>\r\n                            <td className = \"text-center\">{task.giaovien}</td>\r\n                            <td className = \"text-center\">{task.monday}</td>\r\n                            <td className = \"text-center\">{task.chucvu}</td>\r\n                            <td className = \"text-center\">{task.sdt}</td>\r\n                            <td className = \"text-center\">{task.diachi}</td>\r\n                            <td className =\"text-center\">\r\n                                \r\n                                <button type=\"button\" className=\"btn btn-warning\"  onClick = {this.onUpdateGiaovien}>\r\n                                    <i className=\"fas fa-pencil-alt mr-5\"></i>\r\n                                    Sửa</button>&nbsp;\r\n                                <button type=\"button\" className=\"btn btn-danger\"  onClick = {this.onDeleteGiaovien}>\r\n                                    <i className=\"fas fa-trash mr-5\"></i>\r\n                                    Xóa</button>\r\n                            </td>\r\n                    </tr>\r\n                         \r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskItemGiaovien;","import React, { Component } from 'react';\r\nimport TaskItemGiaovien from './TaskItemGiaovien'\r\n\r\n\r\nclass TaskListGiaovien extends Component {\r\n        constructor(props){\r\n            super(props);\r\n            this.state = {\r\n                fitterName: ''\r\n            }\r\n        }\r\n\r\n        render(){\r\n        var {taskGiaovien} = this.props\r\n        var elmTasks = taskGiaovien.map((task, index) =>{\r\n                return <TaskItemGiaovien  key ={index} index = {index}  task = {task}\r\n                onDeleteGiaovien = {this.props.onDeleteGiaovien}\r\n                onUpdateGiaovien = {this.props.onUpdateGiaovien}/>\r\n        })\r\n           \r\n        return (\r\n               <div>\r\n                    <table className=\"table table-bordered table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className = \"text-center\">STT</th>\r\n                            <th className = \"text-center\">Họ tên</th>\r\n                            <th className = \"text-center\">Chuyên môn</th>\r\n                            <th className = \"text-center\">Chủ nhiệm lớp</th>\r\n                            <th className = \"text-center\">Email</th>\r\n                            <th className = \"text-center\">Điện thoại</th>\r\n                            <th className = \"text-center\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { elmTasks}\r\n                        \r\n                    </tbody>\r\n                    </table>\r\n                    </div>      \r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskListGiaovien;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport TaskFormGiaovien from './components/TaskFormGiaovien'\r\nimport TaskListGiaovien from './components/TaskListGiaovien'\r\n\r\nclass Giaovien extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            taskGiaovien: [],\r\n            isDisplayForm: false,\r\n        }\r\n    }\r\n\r\n\r\n    onToggleForm = () => {\r\n\r\n        this.setState({\r\n            isDisplayForm: !this.state.isDisplayForm\r\n        })\r\n\r\n    }\r\n\r\n    onCloseForm = () => {\r\n        this.setState({\r\n            isDisplayForm: !this.state.isDisplayForm\r\n        })\r\n    }\r\n\r\n    onClose = () => {\r\n        this.setState({\r\n            isDisplayForm: false\r\n        })\r\n    }\r\n\r\n    /* LocalStorage  */\r\n    componentDidMount() {\r\n        if (localStorage && localStorage.getItem('taskGiaovien')) {\r\n            var taskGiaovien = JSON.parse(localStorage.getItem('taskGiaovien'));\r\n            this.setState({\r\n                taskGiaovien: taskGiaovien\r\n            });\r\n        }\r\n    }\r\n\r\n    onReset = () => {\r\n        var taskGiaovien = []\r\n        this.setState({\r\n            taskGiaovien: taskGiaovien\r\n        })\r\n        localStorage.setItem('taskGiaovien', JSON.stringify(taskGiaovien));\r\n    }\r\n\r\n\r\n    s4() {\r\n        return Math.floor(1 + Math.random() * 0x10000).toString(16).substring(1);\r\n    }\r\n\r\n    generateID() {\r\n        return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-'\r\n            + this.s4() + this.s4() + this.s4();\r\n    }\r\n\r\n\r\n    onSubmit = (data) => {\r\n        console.log(data);\r\n        var { taskGiaovien } = this.state;\r\n        data.id = this.generateID();\r\n        if (data.tenkhoi !== \"\" && data.tenlop !== \"\" && data.giaovien !== \"\" && data.chuyenmon !== \"\") {\r\n            taskGiaovien.push(data);\r\n        }\r\n        this.setState({\r\n            taskGiaovien: taskGiaovien\r\n        })\r\n        localStorage.setItem('taskGiaovien', JSON.stringify(taskGiaovien));\r\n        this.onCloseForm();\r\n    }\r\n\r\n    onShowForm = () => {\r\n        this.setState({\r\n            isDisplayForm: true\r\n        })\r\n    }\r\n\r\n    onChange = (event) => {\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    findIndex = (id) => {\r\n        var { taskGiaovien } = this.state;\r\n        var result = -1;\r\n        taskGiaovien.forEach((task, index) => {\r\n            if (task.id === id) {\r\n\r\n                result = index;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    onDeleteGiaovien = (id) => {\r\n        var { taskGiaovien } = this.state;\r\n        var index = this.findIndex(id);\r\n        if (index !== -1) {\r\n            taskGiaovien.splice(index, 1);\r\n            this.setState({\r\n                taskGiaovien: taskGiaovien\r\n            });\r\n            localStorage.setItem('taskGiaovien', JSON.stringify(taskGiaovien));\r\n        }\r\n        this.onClose();\r\n    }\r\n\r\n    onUpdateGiaovien = (id) => {\r\n        var { taskGiaovien } = this.state;\r\n        var index = this.findIndex(id);\r\n        var taskEditing = taskGiaovien[index];\r\n        this.setState({\r\n            taskEditing: taskEditing\r\n        })\r\n        this.onShowForm();\r\n    }\r\n    render() {\r\n\r\n        var { isDisplayForm, taskGiaovien, taskEditing } = this.state;\r\n\r\n        var elmTaskFromGiaovien = isDisplayForm\r\n            ? <TaskFormGiaovien\r\n                onCloseForm={this.onCloseForm}\r\n                onSubmit={this.onSubmit}\r\n                taskGiaovien={taskEditing}\r\n            />\r\n            : \"\"\r\n\r\n\r\n        return (\r\n            //   <div>\r\n\r\n            // menu\r\n\r\n\r\n            <div className='Form-app'>\r\n                <div className=\"abc\">\r\n                    <div className=\"row\">\r\n                        <h1>Danh sách giáo viên giảng dạy</h1>\r\n                        <div className={isDisplayForm ? \"col-xs-3 col-sm-3 col-md-3 col-lg-3 mt-50\" : \"\"}>\r\n                            { /* Form Add Giaovien */}\r\n                            {elmTaskFromGiaovien}\r\n\r\n                        </div>\r\n\r\n                        <div className={isDisplayForm\r\n                            ? \"col-xs-9 col-sm-9 col-md-9 col-lg-9 mt-50\"\r\n                            : \"col-xs-12 col-sm-12 col-md-12 col-lg-12 mt-50\"}\r\n                        //  className = {isDisplaySideBar === false \r\n                        //         ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8 abcd mt-50\" \r\n                        //         : \"col-xs-10 col-sm-10 col-md-10 col-lg-10 abcd mt-50\"}\r\n                        >\r\n\r\n\r\n\r\n\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\" style={{ paddingLeft: 0 }}>\r\n                                <button type=\"button\"\r\n\r\n                                    className=\"btn btn-primary mb-5 \"\r\n                                    onClick={this.onToggleForm}\r\n                                >\r\n                                    <i className=\"fas fa-plus mr-5\"></i>\r\n                                                        Thêm giáo viên\r\n                                                    </button>&nbsp;\r\n                                                   </div>\r\n\r\n\r\n                            {/* <button type=\"button\" \r\n                                                            className=\"btn btn-danger mb-5 \"\r\n                                                            onClick = {this.onReset}>\r\n                                                        \r\n                                                        Reset All\r\n                                                    </button> */}\r\n\r\n                            {/* Task List*/}\r\n                            <TaskListGiaovien taskGiaovien={taskGiaovien}\r\n                                onDeleteGiaovien={this.onDeleteGiaovien}\r\n                                onUpdateGiaovien={this.onUpdateGiaovien} />\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n            //    </div>\r\n\r\n\r\n\r\n            //   </div>       \r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Giaovien","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport LopHoc from './QuanlyLopHoc'\r\nimport MonHoc from './QuanLyMonHoc';\r\nimport Diem from './QuanlyDiem';\r\nimport Danhsachquanly from './Danhsachquanly';\r\nimport Giaovien from './QuanlyGiaovien'\r\nimport { BrowserRouter as Router, Route, Link, NavLink } from 'react-router-dom';\r\n\r\n\r\nclass Menu extends Component {\r\n    \r\n\r\n    \r\n\r\n    // onCancel = () => {\r\n    //     this.setState({\r\n    //         isDisplaySideBar: !this.state.isDisplaySideBar\r\n    //     })\r\n    // }\r\n\r\n    render() {\r\n       \r\n\r\n        return (\r\n            <Router>\r\n                <div>\r\n                    <div className='navbar-header'>\r\n                        <h4 className='float-right'>admin</h4>\r\n                    </div>\r\n\r\n                    <input type='checkbox' id='check' />\r\n                    <label htmlFor=\"check\">\r\n                        <i className=\"fas fa-bars\" id=\"btn\" onClick={this.onBar}></i>\r\n                        <i className=\"fas fa-times\" id=\"cancel\" onClick={this.onCancel} ></i>\r\n                    </label>\r\n\r\n                    \r\n                    <img class=\"img-bg\" alt=\"Image\" />\r\n                    \r\n                    <div className='sidebar'>\r\n                        <header>Trang quản trị</header>\r\n                        <ul>\r\n                            <li>\r\n                                <a href='/danhsachquanly'>Thông tin</a>\r\n                            </li>\r\n                            <li>\r\n                                <NavLink to='/quanlynamhoc' activeStyle={{ background: '#1a2225' }}>Quản lý năm học</NavLink>\r\n                            </li>\r\n                            <li>\r\n                                <NavLink to='/quanlyhocky' activeStyle={{ background: '#1a2225' }}>Quản lý học kỳ</NavLink>\r\n                            </li>\r\n                            <li>\r\n                                <NavLink to='/quanlylophoc' activeStyle={{ background: '#1a2225' }}>Quản lý lớp học</NavLink>\r\n                            </li>\r\n                            {/* <li>\r\n                                <NavLink to='/quanlydiem' activeStyle={{ background: '#1a2225' }}>Quản lý điểm</NavLink>\r\n                            </li> */}\r\n                            <li>\r\n                                <NavLink to='/quanlymonhoc' activeStyle={{ background: '#1a2225' }}>Quản lý môn học</NavLink>\r\n                            </li>\r\n                            <li>\r\n                                <NavLink to='/quanlygiaovien' activeStyle={{ background: '#1a2225' }}>Quản lý giáo viên</NavLink>\r\n                            </li>\r\n                            <li>\r\n                                <a>\r\n                                <i class=\"fas fa-sign-out-alt\"></i>\r\n                                Đăng xuất</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                  \r\n\r\n                    <Route path=\"/danhsachquanly\" component={Danhsachquanly} />\r\n                    <Route path=\"/quanlydiem\" component={Diem} />\r\n                    <Route path=\"/quanlymonhoc\" component={MonHoc} />\r\n                    <Route path=\"/quanlylophoc\" component={LopHoc} />\r\n                    <Route path=\"/quanlygiaovien\" component={Giaovien} />\r\n\r\n\r\n                </div>\r\n\r\n            </Router>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Menu;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Menu from './menu'\n\nReactDOM.render(\n  \n  <React.StrictMode><Menu /></React.StrictMode>,document.getElementById('root')\n  \n  \n);\n// ReactDOM.render(\n  \n//   <React.StrictMode><Menu /></React.StrictMode>,document.getElementById('menu')\n  \n  \n// );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}