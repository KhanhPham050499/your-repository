{"version":3,"sources":["serviceWorker.js","components/TaskFormLopHoc.js","components/TaskItemLopHoc.js","components/TaskListLopHoc.js","QuanlyLopHoc.js","components/TaskFormMonHoc.js","components/TaskItemMonHoc.js","components/TaskListMonHoc.js","QuanLyMonHoc.js","components/TaskFormStudents.js","components/TaskItemStudents.js","components/TaskListStudents.js","QuanlyDiem.js","FormDangNhap.js","menu.js","index.js"],"names":["Boolean","window","location","hostname","match","TaskFormLopHoc","props","onChange","event","target","name","value","setState","ValidationTenKhoi","state","tenkhoi","isInputValid","errorMessageTenKhoi","ValidationTenlop","tenlop","errorMessageTenLop","ValidationGiaoVien","giaovien","errorMessageGiaoVien","ValidationChuyenMon","chuyenmon","errorMessageMonChuyen","onSubmit","preventDefault","onClearST","onCloseForm","this","tasks","className","onClick","type","onBlur","style","color","Component","TaskItemLopHoc","onDeleteLopHoc","task","id","onUpdateLopHoc","index","TaskListLopHoc","fitterName","elmTasks","map","key","LopHoc","onToggleForm","isDisplayForm","onClose","onReset","localStorage","setItem","JSON","stringify","data","console","log","generateID","push","onShowForm","findIndex","result","forEach","splice","taskEditing","getItem","parse","Math","floor","random","toString","substring","s4","elmTaskFromLopHoc","paddingLeft","TaskFormMonHoc","onClear","ValidationHT","hoten","errorMessage","errorMessageHT","errorMessageMonDay","tasksS","placeholder","TaskItemMonHoc","onDeleteMonHoc","onUpdateMonHoc","TaskListMonHoc","elmTasksS","MonHoc","elmTaskFromMonHoc","TaskFormStudents","onResetDiem","DM","D15","D60","DT","errorMessageDM","taskDiem","ValidationDM","Validation","TaskItemStudents","onUpdate","tong","parseFloat","round","kq","TaskListStudents","Diem","onBar","isDisplaySideBar","onCancel","Tong","onDelete","elmTaskFromTeacher","FormDangNhap","method","role","class","for","Menu","isShow","htmlFor","to","href","path","component","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6f7d3f6b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\r\n\r\n\r\nclass TaskFormLopHoc extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            tenkhoi : '',\r\n            tenlop: '',\r\n            giaovien: '',\r\n            chuyenmon: '',\r\n            isInputValid: true,\r\n            errorMessageTenKhoi: '' ,\r\n            errorMessageTenLop: '',\r\n            errorMessageGiaoVien: '',\r\n            errorMessageMonChuyen: ''\r\n        }\r\n    }\r\n    \r\n    onChange = (event) =>{\r\n        \r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n    \r\n    ValidationTenKhoi = (event) => {\r\n        if(this.state.tenkhoi ===''){\r\n            this.setState({\r\n                isInputValid : !this.state.isInputValid,\r\n                errorMessageTenKhoi : 'Vui lòng nhập tên khối'\r\n            })\r\n        }else {\r\n            this.setState({\r\n                isInputValid : this.state.isInputValid,\r\n                errorMessageTenKhoi : ''\r\n            })\r\n        }\r\n    }\r\n\r\n    ValidationTenlop = (event) => {\r\n        if(this.state.tenlop ===''){\r\n            this.setState({\r\n                isInputValid : !this.state.isInputValid,\r\n                errorMessageTenLop : 'Vui lòng nhập tên lớp'\r\n            })\r\n        }else {\r\n            this.setState({\r\n                isInputValid : this.state.isInputValid,\r\n                errorMessageTenLop : ''\r\n            })\r\n        }\r\n    }\r\n   \r\n    ValidationGiaoVien = (event) => {\r\n        if(this.state.giaovien ===''){\r\n            this.setState({\r\n                isInputValid : !this.state.isInputValid,\r\n                errorMessageGiaoVien : 'Vui lòng nhập tên giáo viên'\r\n            })\r\n        }else {\r\n            this.setState({\r\n                isInputValid : this.state.isInputValid,\r\n                errorMessageGiaoVien : ''\r\n            })\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        if(this.props.tasks){\r\n            this.setState({\r\n                tenkhoi : this.props.tasks.tenkhoi,\r\n                tenlop: this.props.tasks.tenlop,\r\n                giaovien: this.props.tasks.giaovien,\r\n                chuyenmon: this.props.tasks.chuyenmon\r\n            })\r\n        }\r\n    }\r\n\r\n    ValidationChuyenMon = (event) => {\r\n        if(this.state.chuyenmon ===''){\r\n            this.setState({\r\n                isInputValid : !this.state.isInputValid,\r\n                errorMessageMonChuyen : 'Vui lòng nhập môn dạy'\r\n            })\r\n        }else {\r\n            this.setState({\r\n                isInputValid : this.state.isInputValid,\r\n                errorMessageMonChuyen : ''\r\n            })\r\n        }\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n            this.props.onSubmit(this.state);\r\n        \r\n    }\r\n\r\n    onClearST = () => {\r\n        this.setState({\r\n            tenkhoi : '',\r\n            tenlop: '',\r\n            giaovien: '',\r\n            chuyenmon: ''\r\n        })\r\n    }\r\n\r\n    onCloseForm = () => {\r\n        this.props.onCloseForm();\r\n    }\r\n        render(){\r\n        \r\n           \r\n        return (\r\n            <div className=\"panel panel-danger\">\r\n            <div className=\"panel-heading\">\r\n                  <h3 className=\"panel-title\">Thêm lớp học\r\n                  <i className =\"fa fa-times-circle text-right\"\r\n                     onClick = {this.onCloseForm}></i></h3>\r\n            </div>\r\n            <div className=\"panel-body\">\r\n                   {/* Form input*/ }\r\n                   \r\n                   <form onSubmit = {this.onSubmit}>\r\n                       <div className=\"form-group invalid\">\r\n                           <label>Tên khối</label>\r\n                           <input type=\"text\" className=\"form-control\"\r\n                           name ='tenkhoi'\r\n                           value = {this.state.tenkhoi}\r\n                           onChange = {this.onChange}\r\n                           onBlur = {this.ValidationTenKhoi}\r\n                          />\r\n                            {this.state.tenkhoi === '' ? <span style = {{color : 'red'}}>           \r\n                               {this.state.errorMessageTenKhoi}\r\n                            </span> : null }\r\n                       </div>\r\n                       <div className=\"form-group\">\r\n                           <label>Tên lớp:</label>\r\n                           <input type=\"text\" className=\"form-control\"\r\n                           name = 'tenlop'\r\n                           value = {this.state.tenlop}\r\n                           onChange = {this.onChange}\r\n                           onBlur = {this.ValidationTenlop}/>\r\n                            {this.state.tenlop === '' ? <span style = {{color : 'red'}}>           \r\n                               {this.state.errorMessageTenLop}\r\n                            </span> : null }\r\n                       </div>\r\n                       <div className=\"form-group\">\r\n                           <label >Giáo viên chủ nhiệm</label>\r\n                           <input type=\"text\" className=\"form-control\"\r\n                           name = 'giaovien'\r\n                           value = {this.state.giaovien}\r\n                           onChange = {this.onChange}\r\n                           onBlur = {this.ValidationGiaoVien}/>\r\n                           {this.state.giaovien === '' ? <span style = {{color : 'red'}}>           \r\n                               {this.state.errorMessageGiaoVien}\r\n                            </span> : null } \r\n                       </div>\r\n                       <div className=\"form-group\">\r\n                           <label >Môn chuyên:</label>\r\n                           <input type=\"text\" className=\"form-control\"\r\n                           name = 'chuyenmon'\r\n                           value = {this.state.chuyenmon}\r\n                           onChange = {this.onChange}\r\n                           onBlur = {this.ValidationChuyenMon}/>\r\n                           {this.state.chuyenmon === '' ? <span style = {{color : 'red'}}>           \r\n                               {this.state.errorMessageMonChuyen}\r\n                            </span> : null }\r\n                       </div>\r\n                   \r\n                       \r\n                   <div className=\"text-center\">\r\n                       <button type=\"submit\" className=\"btn btn-warning\">\r\n                            <i className =\"fa fa-plus mr-5\"></i>Lưu</button>&nbsp;\r\n                       <button type=\"button\" className=\"btn btn-danger\" onClick = { this.onClearST}>\r\n                            <i className=\"fas fa-times mr-5\"></i>Xóa</button>\r\n                   </div>\r\n                   </form>\r\n                   \r\n            </div>\r\n      </div>\r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskFormLopHoc;","import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass TaskItemLopHoc extends Component {\r\n    \r\n        onDeleteLopHoc = () => {\r\n           this.props.onDeleteLopHoc(this.props.task.id);\r\n        }\r\n        \r\n        onUpdateLopHoc = () => {\r\n            this.props.onUpdateLopHoc(this.props.task.id); \r\n        }\r\n\r\n        \r\n        render(){\r\n        var {task,index } = this.props\r\n           \r\n        return (\r\n                    <tr>\r\n                            \r\n                            <td className = \"text-center\">{index + 1}</td>\r\n                            <td className = \"text-center\">{task.tenkhoi}</td>\r\n                            <td className = \"text-center\">{task.tenlop}</td>\r\n                            <td className = \"text-center\">{task.giaovien}</td>\r\n                            <td className = \"text-center\">{task.chuyenmon}</td>\r\n                            <td className =\"text-center\">\r\n                                \r\n                                <button type=\"button\" className=\"btn btn-warning\"  onClick = {this.onUpdateLopHoc}>\r\n                                    <i className=\"fas fa-pencil-alt mr-5\"></i>\r\n                                    Sửa</button>&nbsp;\r\n                                <button type=\"button\" className=\"btn btn-danger\"  onClick = {this.onDeleteLopHoc}>\r\n                                    <i className=\"fas fa-trash mr-5\"></i>\r\n                                    Xóa</button>\r\n                            </td>\r\n                    </tr>\r\n                         \r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskItemLopHoc;","import React, { Component } from 'react';\r\nimport TaskItemLopHoc from './TaskItemLopHoc'\r\n\r\n\r\nclass TaskListLopHoc extends Component {\r\n        constructor(props){\r\n            super(props);\r\n            this.state = {\r\n                fitterName: ''\r\n            }\r\n        }\r\n\r\n        render(){\r\n        var {tasks} = this.props\r\n        var elmTasks = tasks.map((task, index) =>{\r\n                return <TaskItemLopHoc  key ={index} index = {index}  task = {task}\r\n                onDeleteLopHoc = {this.props.onDeleteLopHoc}\r\n                onUpdateLopHoc = {this.props.onUpdateLopHoc}/>\r\n        })\r\n           \r\n        return (\r\n               <div>\r\n                    <table className=\"table table-bordered table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className = \"text-center\">STT</th>\r\n                            <th className = \"text-center\">Tên khối</th>\r\n                            <th className = \"text-center\">Tên lớp</th>\r\n                            <th className = \"text-center\">Giáo viên chủ nhiệm</th>\r\n                            <th className = \"text-center\">Chuyên môn</th>\r\n                            <th className = \"text-center\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { elmTasks}\r\n                        \r\n                    </tbody>\r\n                    </table>\r\n                    </div>      \r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskListLopHoc;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport TaskFormLopHoc from './components/TaskFormLopHoc'\r\nimport TaskListLopHoc from './components/TaskListLopHoc'\r\n\r\nclass LopHoc extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tasks: [],\r\n            isDisplayForm: false,\r\n        }\r\n    }\r\n\r\n\r\n    onToggleForm = () => {\r\n\r\n        this.setState({\r\n            isDisplayForm: !this.state.isDisplayForm\r\n        })\r\n\r\n    }\r\n\r\n    onCloseForm = () => {\r\n        this.setState({\r\n            isDisplayForm: !this.state.isDisplayForm\r\n        })\r\n    }\r\n\r\n    onClose = () => {\r\n        this.setState({\r\n            isDisplayForm: false\r\n        })\r\n    }\r\n\r\n    /* LocalStorage  */\r\n    componentDidMount() {\r\n        if (localStorage && localStorage.getItem('tasks')) {\r\n            var tasks = JSON.parse(localStorage.getItem('tasks'));\r\n            this.setState({\r\n                tasks: tasks\r\n            });\r\n        }\r\n    }\r\n\r\n    onReset = () => {\r\n        var tasks = []\r\n        this.setState({\r\n            tasks: tasks\r\n        })\r\n        localStorage.setItem('tasks', JSON.stringify(tasks));\r\n    }\r\n\r\n\r\n    s4() {\r\n        return Math.floor(1 + Math.random() * 0x10000).toString(16).substring(1);\r\n    }\r\n\r\n    generateID() {\r\n        return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-'\r\n            + this.s4() + this.s4() + this.s4();\r\n    }\r\n\r\n\r\n    onSubmit = (data) => {\r\n        console.log(data);\r\n        var { tasks } = this.state;\r\n        data.id = this.generateID();\r\n        if (data.tenkhoi !== \"\" && data.tenlop !== \"\" && data.giaovien !== \"\" && data.chuyenmon !== \"\") {\r\n            tasks.push(data);\r\n        }\r\n        this.setState({\r\n            tasks: tasks\r\n        })\r\n        localStorage.setItem('tasks', JSON.stringify(tasks));\r\n        this.onCloseForm();\r\n    }\r\n\r\n    onShowForm = () => {\r\n        this.setState({\r\n            isDisplayForm: true\r\n        })\r\n    }\r\n\r\n    onChange = (event) => {\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    findIndex = (id) => {\r\n        var { tasks } = this.state;\r\n        var result = -1;\r\n        tasks.forEach((task, index) => {\r\n            if (task.id === id) {\r\n\r\n                result = index;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    onDeleteLopHoc = (id) => {\r\n        var { tasks } = this.state;\r\n        var index = this.findIndex(id);\r\n        if (index !== -1) {\r\n            tasks.splice(index, 1);\r\n            this.setState({\r\n                tasks: tasks\r\n            });\r\n            localStorage.setItem('tasks', JSON.stringify(tasks));\r\n        }\r\n        this.onClose();\r\n    }\r\n\r\n    onUpdateLopHoc = (id) => {\r\n        var { tasks } = this.state;\r\n        var index = this.findIndex(id);\r\n        var taskEditing = tasks[index];\r\n        this.setState({\r\n            taskEditing: taskEditing\r\n        })\r\n        this.onShowForm();\r\n    }\r\n    render() {\r\n\r\n        var { isDisplayForm, tasks, taskEditing } = this.state;\r\n\r\n        var elmTaskFromLopHoc = isDisplayForm\r\n            ? <TaskFormLopHoc\r\n                onCloseForm={this.onCloseForm}\r\n                onSubmit={this.onSubmit}\r\n                tasks={taskEditing}\r\n            />\r\n            : \"\"\r\n\r\n\r\n        return (\r\n            //   <div>\r\n\r\n            // menu\r\n\r\n\r\n            <div className='Form-app'>\r\n                <div className=\"abc\">\r\n                    <div className=\"row\">\r\n                        <h1>Danh sách các lớp học</h1>\r\n                        <div className={isDisplayForm ? \"col-xs-3 col-sm-3 col-md-3 col-lg-3 mt-50\" : \"\"}>\r\n                            { /* Form Add LopHoc */}\r\n                            {elmTaskFromLopHoc}\r\n\r\n                        </div>\r\n\r\n                        <div className={isDisplayForm\r\n                            ? \"col-xs-9 col-sm-9 col-md-9 col-lg-9 mt-50\"\r\n                            : \"col-xs-12 col-sm-12 col-md-12 col-lg-12 mt-50\"}\r\n                        //  className = {isDisplaySideBar === false \r\n                        //         ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8 abcd mt-50\" \r\n                        //         : \"col-xs-10 col-sm-10 col-md-10 col-lg-10 abcd mt-50\"}\r\n                        >\r\n\r\n\r\n\r\n\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\" style={{ paddingLeft: 0 }}>\r\n                                <button type=\"button\"\r\n\r\n                                    className=\"btn btn-primary mb-5 \"\r\n                                    onClick={this.onToggleForm}\r\n                                >\r\n                                    <i className=\"fas fa-plus mr-5\"></i>\r\n                                                        Thêm lớp học\r\n                                                    </button>&nbsp;\r\n                                                   </div>\r\n\r\n\r\n                            {/* <button type=\"button\" \r\n                                                            className=\"btn btn-danger mb-5 \"\r\n                                                            onClick = {this.onReset}>\r\n                                                        \r\n                                                        Reset All\r\n                                                    </button> */}\r\n\r\n                            {/* Task List*/}\r\n                            <TaskListLopHoc tasks={tasks}\r\n                                onDeleteLopHoc={this.onDeleteLopHoc}\r\n                                onUpdateLopHoc={this.onUpdateLopHoc} />\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n            //    </div>\r\n\r\n\r\n\r\n            //   </div>       \r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default LopHoc;","import React, { Component } from 'react';\r\n\r\n\r\nclass TaskFormMonHoc extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hoten: '',\r\n            isInputValid: true,\r\n            errorMessageHT: '' ,\r\n            errorMessageMonDay: ''\r\n        }\r\n    }\r\n    \r\n    onChange = (event) =>{\r\n        \r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value\r\n        this.onClear();\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n    \r\n    componentWillMount() {\r\n        if(this.props.tasksS){\r\n            this.setState({\r\n                hoten : this.props.tasksS.hoten\r\n                \r\n            })\r\n        }\r\n    }\r\n    \r\n    ValidationHT = (event) => {\r\n        if(this.state.hoten ===''){\r\n            this.setState({\r\n                isInputValid : !this.state.isInputValid,\r\n                errorMessage : 'Vui lòng nhập môn học'\r\n            })\r\n        }else {\r\n            this.setState({\r\n                isInputValid : this.state.isInputValid,\r\n                errorMessage : ''\r\n            })\r\n        }\r\n    }\r\n\r\n    onCloseForm = () => {\r\n        this.props.onCloseForm();\r\n    }\r\n   \r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        \r\n    }\r\n\r\n    onClear = () =>  {\r\n          this.setState({\r\n              hoten : ''\r\n          })\r\n    }\r\n    \r\n  \r\n        render(){\r\n        \r\n           \r\n        return (\r\n            <div className=\"panel panel-danger\">\r\n            <div className=\"panel-heading\">\r\n                  <h3 className=\"panel-title\">Thêm môn học\r\n                  <i className =\"fa fa-times-circle text-right\"\r\n                     onClick = {this.onCloseForm}></i>\r\n                  </h3>\r\n            </div>\r\n            <div className=\"panel-body\">\r\n                   {/* Form input*/ }\r\n                   \r\n                   <form onSubmit = {this.onSubmit}>\r\n                       <div className=\"form-group invalid\">\r\n                           \r\n                           <input type=\"text\" className=\"form-control mt-10\" placeholder ='Tên môn học'\r\n                           name ='hoten'\r\n                           value = {this.state.hoten}\r\n                           onChange = {this.onChange}\r\n                           onBlur = {this.ValidationHT}\r\n                          />\r\n                            {this.state.hoten === '' ? <span style = {{color : 'red'}}>           \r\n                               {this.state.errorMessage}\r\n                            </span> : null }\r\n                       </div>\r\n                       \r\n                        <div className=\"text-center\">\r\n                            <button type=\"submit\" className=\"btn btn-warning\">\r\n                                    <i className =\"fa fa-plus mr-5\"></i>Lưu</button>&nbsp;\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick = {this.onClear}>\r\n                                    <i className=\"fas fa-times mr-5\"></i>Xóa</button>\r\n                        </div>\r\n                   </form>\r\n                   \r\n            </div>\r\n      </div>\r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskFormMonHoc;","import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass TaskItemMonHoc extends Component {\r\n     \r\n\r\n    onDeleteMonHoc = () => {\r\n        this.props.onDeleteMonHoc(this.props.tasksS.id);\r\n    }\r\n    onUpdateMonHoc = () => {\r\n        this.props.onUpdateMonHoc(this.props.tasksS.id); \r\n    }\r\n        render(){\r\n        var {tasksS,index } = this.props;\r\n        return (\r\n                    <tr>\r\n                            \r\n                            <td className = \"text-center\">{index + 1}</td>\r\n                            <td className = \"text-center\">{tasksS.hoten}</td>\r\n                            \r\n                            \r\n                            <td className =\"text-center\">\r\n                                \r\n                                <button type=\"button\" className=\"btn btn-warning\" onClick = {this.onUpdateMonHoc}>\r\n                                    <i className=\"fas fa-pencil-alt mr-5\"></i>\r\n                                    Sửa</button>&nbsp;\r\n                                <button type=\"button\" className=\"btn btn-danger\" onClick = {this.onDeleteMonHoc}>\r\n                                    <i className=\"fas fa-trash mr-5\"></i> \r\n                                    Xóa</button>\r\n                            </td>\r\n                    </tr>\r\n                         \r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskItemMonHoc;","import React, { Component } from 'react';\r\nimport TaskItemMonHoc from './TaskItemMonHoc'\r\n\r\n\r\nclass TaskListMonHoc extends Component {\r\n    \r\n\r\n        render(){\r\n        var {tasksS} = this.props\r\n        var elmTasksS = tasksS.map((tasksS, index) =>{\r\n                return <TaskItemMonHoc  key ={index} index = {index}  tasksS = {tasksS}\r\n                             onUpdateMonHoc = {this.props.onUpdateMonHoc}\r\n                             onDeleteMonHoc = {this.props.onDeleteMonHoc}/>\r\n        })\r\n           \r\n        return (\r\n               <div>\r\n                    <table className=\"table table-bordered table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className = 'text-center'>STT</th>\r\n                            <th className = 'text-center'>Môn học</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { elmTasksS}\r\n                        \r\n                    </tbody>\r\n                    </table>\r\n                    </div>      \r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskListMonHoc;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport TaskFormMonHoc from './components/TaskFormMonHoc'\r\nimport TaskListMonHoc from './components/TaskListMonHoc'\r\n\r\nclass MonHoc extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tasksS: [],\r\n            isDisplayForm: false\r\n        }\r\n    }\r\n    \r\n    onToggleForm = () => {\r\n\r\n        this.setState({\r\n            isDisplayForm: !this.state.isDisplayForm\r\n        })\r\n\r\n    }\r\n\r\n    onShowForm = () => {\r\n        this.setState({\r\n            isDisplayForm: true\r\n        })\r\n    }\r\n\r\n    onCloseForm = () => {\r\n        this.setState({\r\n            isDisplayForm: !this.state.isDisplayForm\r\n        })\r\n    }\r\n\r\n    onClose = () => {\r\n        this.setState({\r\n            isDisplayForm: false\r\n        })\r\n    }\r\n\r\n    /* LocalStorage  */\r\n    componentDidMount() {\r\n        if (localStorage && localStorage.getItem('tasksS')) {\r\n            var tasksS = JSON.parse(localStorage.getItem('tasksS'));\r\n            this.setState({\r\n                tasksS: tasksS\r\n            });\r\n        }\r\n    }\r\n\r\n    onReset = () => {\r\n        var tasksS = [\r\n\r\n        ]\r\n        this.setState({\r\n            tasksS: tasksS\r\n        })\r\n        localStorage.setItem('tasksS', JSON.stringify(tasksS));\r\n    }\r\n\r\n\r\n\r\n    s4() {\r\n        return Math.floor(1 + Math.random() * 0x10000).toString(16).substring(1);\r\n    }\r\n\r\n    generateID() {\r\n        return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-'\r\n            + this.s4() + this.s4() + this.s4();\r\n    }\r\n\r\n\r\n    onSubmit = (data) => {\r\n        console.log(data);\r\n        var { tasksS } = this.state;\r\n        data.id = this.generateID();\r\n        if (data.hoten !== '') {\r\n            tasksS.push(data);\r\n        }\r\n        this.setState({\r\n            tasksS: tasksS\r\n        })\r\n        localStorage.setItem('tasksS', JSON.stringify(tasksS));\r\n    }\r\n\r\n\r\n\r\n\r\n    findIndex = (id) => {\r\n        var { tasksS } = this.state;\r\n        var result = -1;\r\n        tasksS.forEach((task, index) => {\r\n            if (task.id === id) {\r\n\r\n                result = index;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    onUpdateMonHoc = (id) => {\r\n        var { tasksS } = this.state;\r\n        var index = this.findIndex(id);\r\n        var taskEditing = tasksS[index];\r\n        this.setState({\r\n            taskEditing: taskEditing\r\n        })\r\n        this.onShowForm();\r\n        console.log(this.state.isDisplayForm)\r\n    }\r\n\r\n    onDeleteMonHoc = (id) => {\r\n        var { tasksS } = this.state;\r\n        var index = this.findIndex(id);\r\n        if (index !== -1) {\r\n            tasksS.splice(index, 1);\r\n            this.setState({\r\n                tasksS: tasksS\r\n            });\r\n            localStorage.setItem('tasksS', JSON.stringify(tasksS));\r\n        }\r\n        this.onClose();\r\n    }\r\n    render() {\r\n\r\n        var { tasksS , isDisplayForm, taskEditing} = this.state;\r\n        \r\n        var elmTaskFromMonHoc = isDisplayForm\r\n            ? <TaskFormMonHoc\r\n                onCloseForm={this.onCloseForm}\r\n                onSubmit={this.onSubmit}\r\n                tasksS={taskEditing}\r\n            />\r\n            : \"\"\r\n\r\n        return (\r\n\r\n            <div className='Form-app-monhoc'>\r\n                <div className=\"abc\">\r\n                    <div className=\"row\">\r\n                        <h1 className='text-center'>Quản lý môn học</h1>\r\n                        <div className={isDisplayForm ? \"col-xs-6 col-sm-4 col-md-4 col-lg-4 mt-50\" : \"\"}>\r\n                            { /* Form Add LopHoc */}\r\n                            {elmTaskFromMonHoc}\r\n\r\n                        </div>\r\n\r\n                        <div className={isDisplayForm\r\n                            ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8 mt-50\"\r\n                            : \"col-xs-12 col-sm-8 col-md-6 col-lg-6 mt-50\"}\r\n                        >\r\n\r\n                            <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\" style={{ paddingLeft: 0 }}>\r\n                                <button type=\"button\"\r\n\r\n                                    className=\"btn btn-primary mb-5 \"\r\n                                    onClick={this.onToggleForm}\r\n                                >\r\n                                    <i className=\"fas fa-plus mr-5\"></i>\r\n                                                        Thêm môn học\r\n                                                    </button>\r\n                                                   </div>\r\n                            <br />\r\n                            <br />\r\n                            \r\n\r\n                            <div className=\"panel panel-primary panel-class\">\r\n                                <div className=\"panel-heading\">\r\n                                    <h3 className=\"panel-title\">Danh sách môn học</h3>\r\n                                </div>\r\n                                <div className=\"panel-body\">\r\n                                    {/* Task List*/}\r\n                                    <TaskListMonHoc tasksS={tasksS}\r\n                                        onUpdateMonHoc={this.onUpdateMonHoc}\r\n                                        onDeleteMonHoc={this.onDeleteMonHoc} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default MonHoc;","import React, { Component } from 'react';\r\n\r\n\r\nclass TaskFormStudents extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            id : '',\r\n            hoten : '',\r\n            DM: null,\r\n            D15: null,\r\n            D60: null,\r\n            DT: null,\r\n            \r\n            isInputValid: true,\r\n            errorMessageHT: '' ,\r\n            errorMessageDM: ''\r\n        }\r\n    }\r\n    \r\n    componentWillMount() {\r\n        if(this.props.taskDiem){\r\n            this.setState({\r\n                id : this.props.taskDiem.id,\r\n                hoten : this.props.taskDiem.hoten,\r\n                DM : this.props.taskDiem.DM,\r\n                D15 : this.props.taskDiem.D15,\r\n                D60 : this.props.taskDiem.D60,\r\n                DT : this.props.taskDiem.DT\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    onChange = (event) =>{\r\n        \r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value\r\n        \r\n        \r\n            this.setState({\r\n                [name]: value\r\n            })\r\n        \r\n        \r\n    }\r\n    \r\n    // ValidationHT = (event) => {\r\n    //     if(this.state.hoten ===''){\r\n    //         this.setState({\r\n    //             isInputValid : !this.state.isInputValid,\r\n    //             errorMessage : 'Vui lòng nhập trường này'\r\n    //         })\r\n    //     }else {\r\n    //         this.setState({\r\n    //             isInputValid : this.state.isInputValid,\r\n    //             errorMessage : ''\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    \r\n   \r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        \r\n    }\r\n    \r\n    onCloseForm = () => {\r\n        this.props.onCloseForm();\r\n    }\r\n\r\n    onResetDiem = () => {\r\n        this.setState({\r\n            DM: '',\r\n            D15: '',\r\n            D60: '',\r\n            DT: ''\r\n        })\r\n    }\r\n        render(){\r\n        \r\n           \r\n        return (\r\n            <div className=\"panel panel-danger\">\r\n            <div className=\"panel-heading\">\r\n                  <h3 className=\"panel-title\">Chỉnh sửa điểm\r\n                  <i className =\"fa fa-times-circle text-right\"\r\n                     onClick = {this.onCloseForm}></i></h3>\r\n            </div>\r\n            <div className=\"panel-body\">\r\n                   {/* Form input*/ }\r\n                   \r\n                   <form onSubmit = {this.onSubmit}>\r\n                       <div className=\"form-group invalid text-center mb-10\">\r\n                       <label>{this.props.taskDiem.hoten}</label>\r\n                        \r\n                       </div>\r\n                       <div className=\"form-group\">\r\n                           <label>Nhập điểm miệng:</label>\r\n                           <input className=\"form-control\"\r\n                           name = 'DM'\r\n                           value = {this.state.DM}\r\n                           onChange = {this.onChange}\r\n                           onBlur = {this.ValidationDM}/>\r\n                            {this.state.DM ? <span style = {{color : 'red'}}>           \r\n                               {this.state.errorMessageDM}\r\n                            </span> : null }\r\n                       </div>\r\n                       <div className=\"form-group\">\r\n                           <label >Nhập điểm 15p:</label>\r\n                           <input  className=\"form-control\" \r\n                           name = 'D15'\r\n                           value = {this.state.D15}\r\n                           onChange = {this.onChange}\r\n                           onBlur = {this.Validation}/>\r\n                            \r\n                       </div>\r\n                       <div className=\"form-group\">\r\n                           <label >Nhập điểm 1 tiết:</label>\r\n                           <input  className=\"form-control\"\r\n                           name = 'D60'\r\n                           value = {this.state.D60}\r\n                           onChange = {this.onChange}/>\r\n                       </div>\r\n                       <div className=\"form-group\">\r\n                           <label >Nhập điểm thi:</label>\r\n                           <input  className=\"form-control\"\r\n                           name = 'DT'\r\n                           value = {this.state.DT}\r\n                           onChange = {this.onChange}/>\r\n                       </div>\r\n                       \r\n                   \r\n                       \r\n                   <div className=\"text-center\">\r\n                       <button type=\"submit\" className=\"btn btn-warning\">\r\n                            <i className =\"fa fa-plus mr-5\"></i>Lưu</button>&nbsp;\r\n                       <button type=\"button\" className=\"btn btn-danger\"  onClick = {this.onResetDiem}>\r\n                            <i className=\"fas fa-times mr-5\"></i>Xóa</button>\r\n                   </div>\r\n                   </form>\r\n                   \r\n            </div>\r\n      </div>\r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskFormStudents;","import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass TaskItemStudents extends Component {\r\n   \r\n    \r\n    onUpdate = () => {\r\n        this.props.onUpdate(this.props.taskDiem.id);\r\n        \r\n    }\r\n\r\n        render(){\r\n        var {taskDiem,index } = this.props;\r\n        var DM = parseFloat(taskDiem.DM);\r\n        var D15 = parseFloat(taskDiem.D15);\r\n        var D60 = parseFloat(taskDiem.D60);\r\n        var DT = parseFloat(taskDiem.DT);\r\n        var tong = (DM + D15 + D60*2 + DT*3)/7;\r\n        var result = Math.round(tong *10)/10;\r\n       var kq = (taskDiem.DM === null || taskDiem.D15 === null || taskDiem.D60 === null || taskDiem.DT === null) ? result === null : result\r\n\r\n        \r\n        return (\r\n                    <tr>\r\n                            \r\n                            <td className = \"text-center\">{index + 1}</td>\r\n                            <td className = \"text-center\">{taskDiem.hoten}</td>\r\n                            <td className = \"text-center\">{taskDiem.DM}</td>\r\n                            <td className = \"text-center\">{taskDiem.D15}</td>\r\n                            <td className = \"text-center\">{taskDiem.D60}</td>\r\n                            <td className = \"text-center\">{taskDiem.DT}</td>\r\n                            <td className = \"text-center\">{ kq}</td>\r\n                            \r\n                            <td className =\"text-center\">\r\n                                \r\n                                <button type=\"button\" className=\"btn btn-warning\" onClick = {this.onUpdate}>\r\n                                    <i className=\"fas fa-pencil-alt mr-5\"></i>\r\n                                   Thêm/Sửa điểm</button>&nbsp;\r\n                                \r\n                            </td>\r\n                    </tr>\r\n                         \r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskItemStudents;","import React, { Component } from 'react';\r\nimport TaskItemStudents from './TaskItemStudents'\r\n\r\n\r\nclass TaskListStudents extends Component {\r\n    \r\n\r\n        render(){\r\n        var {taskDiem} = this.props\r\n        var elmTasks = taskDiem.map((taskDiem, index) =>{\r\n                return <TaskItemStudents  key ={index} index = {index}  taskDiem = {taskDiem}\r\n                                          \r\n                                          onUpdate = {this.props.onUpdate}/>\r\n        })\r\n           \r\n        return (\r\n               <div>\r\n                    <table className=\"table table-bordered table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className = \"text-center\">STT</th>\r\n                            <th className = \"text-center\">Họ tên</th>\r\n                            <th className = \"text-center\">Điểm miệng</th>\r\n                            <th className = \"text-center\">Điểm 15p</th>\r\n                            <th className = \"text-center\">Điểm  1 tiết</th>\r\n                            <th className = \"text-center\">Điểm thi</th>\r\n                            <th className = \"text-center\">Điểm trung bình</th>\r\n                            <th className = \"text-center\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { elmTasks}\r\n                        \r\n                    </tbody>\r\n                    </table>\r\n                    </div>      \r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskListStudents;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport TaskFormStudents from './components/TaskFormStudents'\r\nimport TaskListStudents from './components/TaskListStudents'\r\n\r\nclass Diem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            taskDiem: [\r\n                {\r\n                    id: this.generateID,\r\n                    hoten: \"Bùi Xuân Huấn\",\r\n                    DM: null,\r\n                    D15: null,\r\n                    D60: null,\r\n                    DT: null,\r\n                    Tong: null\r\n\r\n                },\r\n                {\r\n                    id: this.generateID(),\r\n                    hoten: 'Trần Đức Bo',\r\n                    DM: null,\r\n                    D15: null,\r\n                    D60: null,\r\n                    DT: null,\r\n                    Tong: null\r\n\r\n                },\r\n                {\r\n                    id: this.generateID(),\r\n                    hoten: 'Anh Ngạn',\r\n                    DM: null,\r\n                    D15: null,\r\n                    D60: null,\r\n                    DT: null,\r\n                    Tong: null\r\n\r\n                },\r\n                {\r\n                    id: this.generateID(),\r\n                    hoten: 'Ngô Bá Khá',\r\n                    DM: null,\r\n                    D15: null,\r\n                    D60: null,\r\n                    DT: null,\r\n                    Tong: null\r\n\r\n                },\r\n                {\r\n                    id: this.generateID(),\r\n                    hoten: 'Phùng Đức Trọng',\r\n                    DM: null,\r\n                    D15: null,\r\n                    D60: null,\r\n                    DT: null,\r\n                    Tong: null\r\n\r\n                },\r\n                {\r\n                    id: this.generateID(),\r\n                    hoten: 'Hoàng Lộc',\r\n                    DM: null,\r\n                    D15: null,\r\n                    D60: null,\r\n                    DT: null,\r\n                    Tong: null\r\n\r\n                },\r\n                {\r\n                    id: this.generateID(),\r\n                    hoten: 'Nguyễn Văn Linh',\r\n                    DM: null,\r\n                    D15: null,\r\n                    D60: null,\r\n                    DT: null,\r\n                    Tong: null\r\n\r\n                },\r\n                {\r\n                    id: this.generateID(),\r\n                    hoten: 'Hồ Văn Hà',\r\n                    DM: null,\r\n                    D15: null,\r\n                    D60: null,\r\n                    DT: null,\r\n                    Tong: null\r\n\r\n                },\r\n\r\n            ],\r\n            isDisplaySideBar: false,\r\n            isDisplayForm: false,\r\n            taskEditing: null\r\n        }\r\n    }\r\n\r\n\r\n    onBar = () => {\r\n        this.setState({\r\n            isDisplaySideBar: !this.state.isDisplaySideBar\r\n        })\r\n    }\r\n\r\n    onCancel = () => {\r\n        this.setState({\r\n            isDisplaySideBar: !this.state.isDisplaySideBar\r\n        })\r\n    }\r\n\r\n\r\n\r\n    onCloseForm = () => {\r\n        this.setState({\r\n            isDisplayForm: !this.state.isDisplayForm\r\n        })\r\n    }\r\n    onShowForm = () => {\r\n        this.setState({\r\n            isDisplayForm: true\r\n        })\r\n    }\r\n    /* LocalStorage  */\r\n    componentDidMount() {\r\n        if (localStorage && localStorage.getItem('taskDiem')) {\r\n            var taskDiem = JSON.parse(localStorage.getItem('taskDiem'));\r\n            this.setState({\r\n                taskDiem: taskDiem\r\n            });\r\n        }\r\n    }\r\n\r\n    onReset = () => {\r\n        var taskDiem = [\r\n\r\n            {\r\n                id: this.generateID,\r\n                hoten: \"Bùi Xuân Huấn\",\r\n                DM: null,\r\n                D15: null,\r\n                D60: null,\r\n                DT: null,\r\n                Tong: null\r\n\r\n            },\r\n            {\r\n                id: this.generateID(),\r\n                hoten: 'Trần Đức Bo',\r\n                DM: null,\r\n                D15: null,\r\n                D60: null,\r\n                DT: null,\r\n                Tong: null\r\n\r\n            },\r\n            {\r\n                id: this.generateID(),\r\n                hoten: 'Anh Ngạn',\r\n                DM: null,\r\n                D15: null,\r\n                D60: null,\r\n                DT: null,\r\n                Tong: null\r\n\r\n            },\r\n            {\r\n                id: this.generateID(),\r\n                hoten: 'Ngô Bá Khá',\r\n                DM: null,\r\n                D15: null,\r\n                D60: null,\r\n                DT: null,\r\n                Tong: null\r\n\r\n            },\r\n            {\r\n                id: this.generateID(),\r\n                hoten: 'Phùng Đức Trọng',\r\n                DM: null,\r\n                D15: null,\r\n                D60: null,\r\n                DT: null,\r\n                Tong: null\r\n\r\n            },\r\n            {\r\n                id: this.generateID(),\r\n                hoten: 'Hoàng Lộc',\r\n                DM: null,\r\n                D15: null,\r\n                D60: null,\r\n                DT: null,\r\n                Tong: null\r\n\r\n            },\r\n            {\r\n                id: this.generateID(),\r\n                hoten: 'Nguyễn Văn Linh',\r\n                DM: null,\r\n                D15: null,\r\n                D60: null,\r\n                DT: null,\r\n                Tong: null\r\n\r\n            },\r\n            {\r\n                id: this.generateID(),\r\n                hoten: 'Hồ Văn Hà',\r\n                DM: null,\r\n                D15: null,\r\n                D60: null,\r\n                DT: null,\r\n                Tong: null\r\n\r\n            },\r\n\r\n        ]\r\n        this.setState({\r\n            taskDiem: taskDiem\r\n        })\r\n        localStorage.setItem('taskDiem', JSON.stringify(taskDiem));\r\n    }\r\n    sinhdiem() {\r\n        return Math.round((Math.random() * 10) * 10) / 10;\r\n    }\r\n\r\n\r\n    s4() {\r\n        return Math.floor(1 + Math.random() * 0x10000).toString(16).substring(1);\r\n    }\r\n\r\n    generateID() {\r\n        return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-'\r\n            + this.s4() + this.s4() + this.s4();\r\n    }\r\n\r\n\r\n    onSubmit = (data) => {\r\n\r\n        var { taskDiem } = this.state;\r\n        if (data.id === '') {\r\n            data.id = this.generateID();\r\n            // if(data.hoten !==''){\r\n            //     taskDiem.push(data);\r\n            // }\r\n\r\n        } else {\r\n            //Editing\r\n            if (data.hoten !== '') {\r\n                var index = this.findIndex(data.id);\r\n                taskDiem[index] = data;\r\n            }\r\n\r\n        }\r\n        this.setState({\r\n            taskDiem: taskDiem\r\n        })\r\n        localStorage.setItem('taskDiem', JSON.stringify(taskDiem));\r\n        if (data.hoten !== '') {\r\n            this.onCloseForm();\r\n        }\r\n    }\r\n\r\n    findIndex = (id) => {\r\n        var { taskDiem } = this.state;\r\n        var result = -1;\r\n        taskDiem.forEach((task, index) => {\r\n            if (task.id === id) {\r\n\r\n                result = index;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    onDelete = (id) => {\r\n        var { taskDiem } = this.state;\r\n        var index = this.findIndex(id);\r\n        if (index !== -1) {\r\n            taskDiem.splice(index, 1);\r\n            this.setState({\r\n                taskDiem: taskDiem\r\n            });\r\n            localStorage.setItem('taskDiem', JSON.stringify(taskDiem));\r\n        }\r\n\r\n    }\r\n\r\n    onUpdate = (id) => {\r\n        var { taskDiem } = this.state;\r\n        var index = this.findIndex(id);\r\n        var taskEditing = taskDiem[index];\r\n        this.setState({\r\n            taskEditing: taskEditing\r\n        })\r\n        this.onShowForm();\r\n    }\r\n\r\n    render() {\r\n\r\n        var { isDisplaySideBar, isDisplayForm, taskDiem, taskEditing } = this.state;\r\n        var elmTaskFromTeacher = isDisplayForm\r\n            ? <TaskFormStudents\r\n                onCloseForm={this.onCloseForm}\r\n                onSubmit={this.onSubmit}\r\n                taskDiem={taskEditing}\r\n            />\r\n            : \"\"\r\n        return (\r\n\r\n\r\n\r\n\r\n            <div className='Form-app-diem'>\r\n\r\n                <div className=\"abc\">\r\n                    <div className=\"row\">\r\n                        <h1>Quản lý điểm môn Toán lớp 12b5</h1>\r\n                        <div className={isDisplayForm ? \"col-xs-12 col-sm-12 col-md-3 col-lg-3 mt-50\" : \"\"}>\r\n                            { /* Form Add Teacher */}\r\n                            {elmTaskFromTeacher}\r\n\r\n                        </div>\r\n\r\n                        <div className={isDisplayForm\r\n                            ? \"col-xs-9 col-sm-9 col-md-9 col-lg-9 mt-50\"\r\n                            : \"col-xs-12 col-sm-12 col-md-12 col-lg-12 mt-50\"}\r\n                        //  className = {isDisplaySideBar === false \r\n                        //         ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8 abcd mt-50\" \r\n                        //         : \"col-xs-10 col-sm-10 col-md-10 col-lg-10 abcd mt-50\"}\r\n                        >\r\n\r\n                            {/* <button type=\"button\" \r\n                                                    className=\"btn btn-primary mb-5 \"\r\n                                                    onClick = {this.onToggleForm}>\r\n                                                 <i className=\"fas fa-plus mr-5\"></i>\r\n                                                Thêm học sinh\r\n                                            </button>&nbsp; */}\r\n\r\n                            {/* <button type=\"button\" \r\n                                                    className=\"btn btn-danger mb-5 \"\r\n                                                    onClick = {this.onReset}>\r\n                                                 \r\n                                                Làm mới điểm\r\n                                            </button> */}\r\n\r\n\r\n                            <div className=\"panel panel-primary panel-diem\">\r\n                                <div className=\"panel-heading\">\r\n                                    <h3 className=\"panel-title\">Giáo viên dạy: Phan Tấn Trung</h3>\r\n                                </div>\r\n                                <div className=\"panel-body\">\r\n\r\n                                    {/* Task List*/}\r\n                                    <TaskListStudents taskDiem={taskDiem}\r\n                                        onDelete={this.onDelete}\r\n                                        onUpdate={this.onUpdate} />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Diem;","import React, { Component } from 'react';\r\nimport './App.css'\r\n\r\nclass FormDangNhap extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n                <form  method=\"POST\" role=\"form\">\r\n                    <legend>Đăng nhập</legend>\r\n                \r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">label</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"\" placeholder=\"Input field\" />\r\n                    </div>\r\n                \r\n                    \r\n                \r\n                    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n                </form>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormDangNhap;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport LopHoc from './QuanlyLopHoc'\r\nimport MonHoc from './QuanLyMonHoc';\r\nimport Diem from './QuanlyDiem';\r\nimport FormDangNhap from './FormDangNhap'\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\n\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isDisplaySideBar: false,\r\n\r\n        }\r\n    }\r\n\r\n    onBar = () => {\r\n        this.setState({\r\n            isDisplaySideBar: !this.state.isDisplaySideBar\r\n        })\r\n    }\r\n\r\n    onCancel = () => {\r\n        this.setState({\r\n            isDisplaySideBar: !this.state.isDisplaySideBar\r\n        })\r\n    }\r\n\r\n    render() {\r\n        var { isShow } = this.state\r\n\r\n        return (\r\n            <Router>\r\n                <div>\r\n                    <input type='checkbox' id='check' />\r\n                    <label htmlFor=\"check\">\r\n                        <i className=\"fas fa-bars\" id=\"btn\" onClick={this.onBar}></i>\r\n                        <i className=\"fas fa-times\" id=\"cancel\" onClick={this.onCancel} ></i>\r\n                    </label>\r\n                    <div className='sidebar'>\r\n                        <header>Menu</header>\r\n                        <ul>\r\n                            <li>\r\n                                <Link to=\"/\">Trang chủ</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to='/quanlylophoc'>Quản lý lớp học</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to='quanlydiem'>Quản lý điểm</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to='quanlymonhoc'>Quản lý môn học</Link>\r\n                            </li>\r\n                            <li>\r\n                                <a href='/login'>Đăng xuất</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <Route path=\"/quanlydiem\" component={Diem} />\r\n                    <Route path=\"/quanlymonhoc\" component={MonHoc} />\r\n                    <Route path=\"/quanlylophoc\" component={LopHoc} />\r\n                    <Route path=\"/login\" component={FormDangNhap} />\r\n\r\n\r\n\r\n                </div>\r\n\r\n            </Router>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Menu;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Menu from './menu'\nReactDOM.render(\n  \n  <React.StrictMode><Menu /></React.StrictMode>,document.getElementById('root')\n  \n  \n);\n// ReactDOM.render(\n  \n//   <React.StrictMode><Menu /></React.StrictMode>,document.getElementById('menu')\n  \n  \n// );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}