{"version":3,"sources":["serviceWorker.js","components/TaskFormTeacher.js","components/TaskItemTeacher.js","components/TaskListTeacher.js","components/TaskFormStudents.js","Teacher.js","components/TaskItemStudents.js","components/TaskListStudents.js","QuanlyDiem.js","components/TaskFormMonHoc.js","components/TaskItemMonHoc.js","components/TaskListMonHoc.js","QuanLyMonHoc.js","menu.js","index.js"],"names":["Boolean","window","location","hostname","match","TaskFormTeacher","props","onChange","event","target","name","value","setState","ValidationHT","state","hoten","isInputValid","errorMessage","ValidationMonDay","monday","errorMessageMonDay","onSubmit","preventDefault","onCloseForm","ngaysinh","dienthoai","noicutru","errorMessageHT","className","onClick","this","type","onBlur","style","color","Validation","Component","TaskItemTeacher","task","index","TaskListTeacher","elmTasks","tasks","map","key","TaskFormStudents","id","DM","D15","D60","DT","errorMessageDM","taskDiem","ValidationDM","TaskItemStudents","onUpdate","tong","parseFloat","result","Math","round","kq","TaskListStudents","Diem","onBar","isDisplaySideBar","onCancel","isDisplayForm","onShowForm","onReset","generateID","Tong","localStorage","setItem","JSON","stringify","data","findIndex","forEach","onDelete","splice","taskEditing","getItem","parse","random","floor","toString","substring","s4","elmTaskFromTeacher","class","TaskFormMonHoc","onClear","placeholder","TaskItemMonHoc","onDeleteMonHoc","tasksS","TaskListMonHoc","elmTasksS","MonHoc","console","log","push","onClearAdd","Menu","isShowDiem","isShow","isShowMonHoc","isShowTeacher","htmlFor","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9b441440.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\r\n\r\n\r\nclass TaskFormTeacher extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hoten : '',\r\n            monday: '',\r\n            ngaysinh: '',\r\n            dienthoai: '',\r\n            noicutru: '',\r\n            isInputValid: true,\r\n            errorMessageHT: '' ,\r\n            errorMessageMonDay: ''\r\n        }\r\n    }\r\n    \r\n    onChange = (event) =>{\r\n        \r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n    \r\n    ValidationHT = (event) => {\r\n        if(this.state.hoten ===''){\r\n            this.setState({\r\n                isInputValid : !this.state.isInputValid,\r\n                errorMessage : 'Vui lòng nhập trường này'\r\n            })\r\n        }else {\r\n            this.setState({\r\n                isInputValid : this.state.isInputValid,\r\n                errorMessage : ''\r\n            })\r\n        }\r\n    }\r\n\r\n    ValidationMonDay = (event) => {\r\n        if(this.state.monday ===''){\r\n            this.setState({\r\n                isInputValid : !this.state.isInputValid,\r\n                errorMessageMonDay : 'Vui lòng nhập trường này'\r\n            })\r\n        }else {\r\n            this.setState({\r\n                isInputValid : this.state.isInputValid,\r\n                errorMessageMonDay : ''\r\n            })\r\n        }\r\n    }\r\n   \r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n    }\r\n\r\n    onCloseForm = () => {\r\n        this.props.onCloseForm();\r\n    }\r\n        render(){\r\n        \r\n           \r\n        return (\r\n            <div className=\"panel panel-danger\">\r\n            <div className=\"panel-heading\">\r\n                  <h3 className=\"panel-title\">Thêm giáo viên\r\n                  <i className =\"fa fa-times-circle text-right\"\r\n                     onClick = {this.onCloseForm}></i></h3>\r\n            </div>\r\n            <div className=\"panel-body\">\r\n                   {/* Form input*/ }\r\n                   \r\n                   <form onSubmit = {this.onSubmit}>\r\n                       <div className=\"form-group invalid\">\r\n                           <label>Họ tên:</label>\r\n                           <input type=\"text\" className=\"form-control\"\r\n                           name ='hoten'\r\n                           value = {this.state.hoten}\r\n                           onChange = {this.onChange}\r\n                           onBlur = {this.ValidationHT}\r\n                          />\r\n                            {this.state.hoten === '' ? <span style = {{color : 'red'}}>           \r\n                               {this.state.errorMessage}\r\n                            </span> : null }\r\n                       </div>\r\n                       <div className=\"form-group\">\r\n                           <label>Môn dạy:</label>\r\n                           <input type=\"text\" className=\"form-control\"\r\n                           name = 'monday'\r\n                           value = {this.state.monday}\r\n                           onChange = {this.onChange}\r\n                           onBlur = {this.ValidationMonDay}/>\r\n                            {this.state.monday === '' ? <span style = {{color : 'red'}}>           \r\n                               {this.state.errorMessageMonDay}\r\n                            </span> : null }\r\n                       </div>\r\n                       <div className=\"form-group\">\r\n                           <label >Ngày sinh:</label>\r\n                           <input type=\"text\" className=\"form-control\"\r\n                           name = 'ngaysinh'\r\n                           value = {this.state.ngaysinh}\r\n                           onChange = {this.onChange}\r\n                           onBlur = {this.Validation}/>\r\n                            \r\n                       </div>\r\n                       <div className=\"form-group\">\r\n                           <label >Điện thoại:</label>\r\n                           <input type=\"text\" className=\"form-control\"\r\n                           name = 'dienthoai'\r\n                           value = {this.state.dienthoai}\r\n                           onChange = {this.onChange}/>\r\n                       </div>\r\n                       <div className=\"form-group\">\r\n                           <label >Nơi cư trú:</label>\r\n                           <input type=\"text\" className=\"form-control\"\r\n                           name = 'noicutru'\r\n                           value = {this.state.noicutru}\r\n                           onChange = {this.onChange}/>\r\n                       </div>\r\n                   \r\n                       \r\n                   <div className=\"text-center\">\r\n                       <button type=\"submit\" className=\"btn btn-warning\">\r\n                            <i className =\"fa fa-plus mr-5\"></i>Lưu</button>&nbsp;\r\n                       <button type=\"button\" className=\"btn btn-danger\">\r\n                            <i className=\"fas fa-times mr-5\"></i>Hủy bỏ</button>\r\n                   </div>\r\n                   </form>\r\n                   \r\n            </div>\r\n      </div>\r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskFormTeacher;","import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass TaskItemTeacher extends Component {\r\n    \r\n        render(){\r\n        var {task,index } = this.props\r\n           \r\n        return (\r\n                    <tr>\r\n                            \r\n                            <td className = \"text-center\">{index + 1}</td>\r\n                            <td className = \"text-center\">{task.hoten}</td>\r\n                            <td className = \"text-center\">{task.monday}</td>\r\n                            <td className = \"text-center\">{task.ngaysinh}</td>\r\n                            <td className = \"text-center\">{task.dienthoai}</td>\r\n                            <td className = \"text-center\">{task.noicutru}</td>\r\n                            <td className =\"text-center\">\r\n                                \r\n                                <button type=\"button\" className=\"btn btn-warning\">\r\n                                    <i className=\"fas fa-pencil-alt mr-5\"></i>\r\n                                    Sửa</button>&nbsp;\r\n                                <button type=\"button\" className=\"btn btn-danger\">\r\n                                    <i className=\"fas fa-trash mr-5\"></i>\r\n                                    Xóa</button>\r\n                            </td>\r\n                    </tr>\r\n                         \r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskItemTeacher;","import React, { Component } from 'react';\r\nimport TaskItemTeacher from './TaskItemTeacher'\r\n\r\n\r\nclass TaskListTeacher extends Component {\r\n    \r\n\r\n        render(){\r\n        var {tasks} = this.props\r\n        var elmTasks = tasks.map((task, index) =>{\r\n                return <TaskItemTeacher  key ={index} index = {index}  task = {task}/>\r\n        })\r\n           \r\n        return (\r\n               <div>\r\n                    <table className=\"table table-bordered table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className = \"text-center\">STT</th>\r\n                            <th className = \"text-center\">Họ tên</th>\r\n                            <th className = \"text-center\">Môn dạy</th>\r\n                            <th className = \"text-center\">Ngày sinh</th>\r\n                            <th className = \"text-center\">Điện thoại</th>\r\n                            <th className = \"text-center\">Nơi cư trú</th>\r\n                            <th className = \"text-center\">Chức năng</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { elmTasks}\r\n                        \r\n                    </tbody>\r\n                    </table>\r\n                    </div>      \r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskListTeacher;","import React, { Component } from 'react';\r\n\r\n\r\nclass TaskFormStudents extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            id : '',\r\n            hoten : '',\r\n            DM: null,\r\n            D15: null,\r\n            D60: null,\r\n            DT: null,\r\n            \r\n            isInputValid: true,\r\n            errorMessageHT: '' ,\r\n            errorMessageDM: ''\r\n        }\r\n    }\r\n    \r\n    componentWillMount() {\r\n        if(this.props.taskDiem){\r\n            this.setState({\r\n                id : this.props.taskDiem.id,\r\n                hoten : this.props.taskDiem.hoten,\r\n                DM : this.props.taskDiem.DM,\r\n                D15 : this.props.taskDiem.D15,\r\n                D60 : this.props.taskDiem.D60,\r\n                DT : this.props.taskDiem.DT\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    onChange = (event) =>{\r\n        \r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value\r\n        \r\n        \r\n            this.setState({\r\n                [name]: value\r\n            })\r\n        \r\n        \r\n    }\r\n    \r\n    // ValidationHT = (event) => {\r\n    //     if(this.state.hoten ===''){\r\n    //         this.setState({\r\n    //             isInputValid : !this.state.isInputValid,\r\n    //             errorMessage : 'Vui lòng nhập trường này'\r\n    //         })\r\n    //     }else {\r\n    //         this.setState({\r\n    //             isInputValid : this.state.isInputValid,\r\n    //             errorMessage : ''\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    \r\n   \r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        \r\n    }\r\n\r\n    onCloseForm = () => {\r\n        this.props.onCloseForm();\r\n    }\r\n        render(){\r\n        \r\n           \r\n        return (\r\n            <div className=\"panel panel-danger\">\r\n            <div className=\"panel-heading\">\r\n                  <h3 className=\"panel-title\">Chỉnh sửa điểm\r\n                  <i className =\"fa fa-times-circle text-right\"\r\n                     onClick = {this.onCloseForm}></i></h3>\r\n            </div>\r\n            <div className=\"panel-body\">\r\n                   {/* Form input*/ }\r\n                   \r\n                   <form onSubmit = {this.onSubmit}>\r\n                       <div className=\"form-group invalid text-center mb-10\">\r\n                       <label>{this.props.taskDiem.hoten}</label>\r\n                        \r\n                       </div>\r\n                       <div className=\"form-group\">\r\n                           <label>Nhập điểm miệng:</label>\r\n                           <input className=\"form-control\"\r\n                           name = 'DM'\r\n                           value = {this.state.DM}\r\n                           onChange = {this.onChange}\r\n                           onBlur = {this.ValidationDM}/>\r\n                            {this.state.DM ? <span style = {{color : 'red'}}>           \r\n                               {this.state.errorMessageDM}\r\n                            </span> : null }\r\n                       </div>\r\n                       <div className=\"form-group\">\r\n                           <label >Nhập điểm 15p:</label>\r\n                           <input  className=\"form-control\" \r\n                           name = 'D15'\r\n                           value = {this.state.D15}\r\n                           onChange = {this.onChange}\r\n                           onBlur = {this.Validation}/>\r\n                            \r\n                       </div>\r\n                       <div className=\"form-group\">\r\n                           <label >Nhập điểm 1 tiết:</label>\r\n                           <input  className=\"form-control\"\r\n                           name = 'D60'\r\n                           value = {this.state.D60}\r\n                           onChange = {this.onChange}/>\r\n                       </div>\r\n                       <div className=\"form-group\">\r\n                           <label >Nhập điểm thi:</label>\r\n                           <input  className=\"form-control\"\r\n                           name = 'DT'\r\n                           value = {this.state.DT}\r\n                           onChange = {this.onChange}/>\r\n                       </div>\r\n                       \r\n                   \r\n                       \r\n                   <div className=\"text-center\">\r\n                       <button type=\"submit\" className=\"btn btn-warning\">\r\n                            <i className =\"fa fa-plus mr-5\"></i>Lưu</button>&nbsp;\r\n                       <button type=\"button\" className=\"btn btn-danger\"  onClick = {this.onCloseForm}>\r\n                            <i className=\"fas fa-times mr-5\"></i>Hủy bỏ</button>\r\n                   </div>\r\n                   </form>\r\n                   \r\n            </div>\r\n      </div>\r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskFormStudents;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport TaskFormTeacher from './components/TaskFormTeacher'\r\nimport TaskListTeacher from './components/TaskListTeacher'\r\n\r\nclass Teacher extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            tasks :[],\r\n            isDisplaySideBar : false,\r\n            isDisplayForm : false\r\n        }\r\n    }\r\n    \r\n\r\n    onBar = () => {\r\n       this.setState({\r\n           isDisplaySideBar : !this.state.isDisplaySideBar\r\n       })\r\n    }\r\n\r\n    onCancel = () => {\r\n        this.setState({\r\n            isDisplaySideBar : !this.state.isDisplaySideBar\r\n        })\r\n    }\r\n   \r\n\r\n    onToggleForm = () => {\r\n        \r\n        this.setState({\r\n            isDisplayForm : !this.state.isDisplayForm\r\n        })\r\n        \r\n    }  \r\n\r\n    onCloseForm = () =>{\r\n        this.setState({\r\n            isDisplayForm : !this.state.isDisplayForm\r\n        })\r\n    }\r\n   \r\n    /* LocalStorage  */\r\n    componentDidMount() {\r\n        if(localStorage && localStorage.getItem('tasks')){\r\n            var tasks = JSON.parse(localStorage.getItem('tasks'));\r\n            this.setState({\r\n                tasks: tasks\r\n            });\r\n        }\r\n    }\r\n\r\n   onReset = () => {\r\n       var tasks = []\r\n       this.setState({\r\n           tasks : tasks\r\n       })\r\n       localStorage.setItem('tasks', JSON.stringify(tasks));\r\n   }\r\n    \r\n\r\n    s4() {\r\n        return Math.floor(1+Math.random() * 0x10000).toString(16).substring(1);\r\n    }  \r\n\r\n    generateID() {\r\n        return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' \r\n              + this.s4() + this.s4() + this.s4();\r\n    }\r\n    \r\n\r\n    onSubmit = (data) => {\r\n        console.log(data);\r\n        var {tasks } = this.state;\r\n        data.id = this.generateID();\r\n        if(data.hoten !=='' && data.monday !== ''){\r\n            tasks.push(data);\r\n        }\r\n        this.setState({\r\n            tasks : tasks\r\n        })\r\n        localStorage.setItem('tasks', JSON.stringify(tasks));\r\n    }\r\n\r\n    \r\n        render(){\r\n\r\n            var  { isDisplaySideBar , isDisplayForm ,tasks } = this.state;\r\n            var elmTaskFromTeacher = isDisplayForm \r\n            ? <TaskFormTeacher \r\n            onCloseForm = {this.onCloseForm}\r\n            onSubmit = {this.onSubmit}\r\n        /> \r\n            : \"\"\r\n        return (\r\n         //   <div>\r\n                \r\n                // menu\r\n                    \r\n                    \r\n                        <div className='Form-app'>\r\n                                <div className=\"abc\">\r\n                                    <div className=\"row\">\r\n                                    <h1>Danh sách giáo viên giảng dạy</h1>\r\n                                        <div className={isDisplayForm ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4 mt-50\" : \"\"}>\r\n                                                { /* Form Add Teacher */ }\r\n                                            { elmTaskFromTeacher}\r\n                                            \r\n                                        </div>\r\n                                        \r\n                                        <div className= {isDisplayForm\r\n                                                    ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8 mt-50\" \r\n                                                    : \"col-xs-12 col-sm-12 col-md-12 col-lg-12 mt-50\"}\r\n                                            //  className = {isDisplaySideBar === false \r\n                                            //         ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8 abcd mt-50\" \r\n                                            //         : \"col-xs-10 col-sm-10 col-md-10 col-lg-10 abcd mt-50\"}\r\n                                            >\r\n                                                \r\n                                                <button type=\"button\" \r\n                                                        className=\"btn btn-primary mb-5 \"\r\n                                                        onClick = {this.onToggleForm}>\r\n                                                    <i className=\"fas fa-plus mr-5\"></i>\r\n                                                    Thêm giáo viên\r\n                                                </button>&nbsp;\r\n                                                \r\n                                                <button type=\"button\" \r\n                                                        className=\"btn btn-danger mb-5 \"\r\n                                                        onClick = {this.onReset}>\r\n                                                    \r\n                                                    Reset All\r\n                                                </button>\r\n\r\n                                                {/* Task List*/}\r\n                                                <TaskListTeacher  tasks = {tasks}/>\r\n                                    \r\n                                    </div>\r\n                                    </div>\r\n                \r\n                                </div>\r\n\r\n                       </div>\r\n                     \r\n                    \r\n            //    </div>\r\n                \r\n                \r\n                \r\n         //   </div>       \r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Teacher;","import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass TaskItemStudents extends Component {\r\n   \r\n    \r\n    onUpdate = () => {\r\n        this.props.onUpdate(this.props.taskDiem.id);\r\n        \r\n    }\r\n\r\n        render(){\r\n        var {taskDiem,index } = this.props;\r\n        var DM = parseFloat(taskDiem.DM);\r\n        var D15 = parseFloat(taskDiem.D15);\r\n        var D60 = parseFloat(taskDiem.D60);\r\n        var DT = parseFloat(taskDiem.DT);\r\n        var tong = (DM + D15 + D60*2 + DT*3)/7;\r\n        var result = Math.round(tong *10)/10;\r\n       var kq = (taskDiem.DM === null || taskDiem.D15 === null || taskDiem.D60 === null || taskDiem.DT === null) ? result === null : result\r\n\r\n        \r\n        return (\r\n                    <tr>\r\n                            \r\n                            <td className = \"text-center\">{index + 1}</td>\r\n                            <td className = \"text-center\">{taskDiem.hoten}</td>\r\n                            <td className = \"text-center\">{taskDiem.DM}</td>\r\n                            <td className = \"text-center\">{taskDiem.D15}</td>\r\n                            <td className = \"text-center\">{taskDiem.D60}</td>\r\n                            <td className = \"text-center\">{taskDiem.DT}</td>\r\n                            <td className = \"text-center\">{ kq}</td>\r\n                            \r\n                            <td className =\"text-center\">\r\n                                \r\n                                <button type=\"button\" className=\"btn btn-warning\" onClick = {this.onUpdate}>\r\n                                    <i className=\"fas fa-pencil-alt mr-5\"></i>\r\n                                    Sửa điểm</button>&nbsp;\r\n                                \r\n                            </td>\r\n                    </tr>\r\n                         \r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskItemStudents;","import React, { Component } from 'react';\r\nimport TaskItemStudents from './TaskItemStudents'\r\n\r\n\r\nclass TaskListStudents extends Component {\r\n    \r\n\r\n        render(){\r\n        var {taskDiem} = this.props\r\n        var elmTasks = taskDiem.map((taskDiem, index) =>{\r\n                return <TaskItemStudents  key ={index} index = {index}  taskDiem = {taskDiem}\r\n                                          \r\n                                          onUpdate = {this.props.onUpdate}/>\r\n        })\r\n           \r\n        return (\r\n               <div>\r\n                    <table className=\"table table-bordered table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className = \"text-center\">STT</th>\r\n                            <th className = \"text-center\">Họ tên</th>\r\n                            <th className = \"text-center\">Điểm miệng</th>\r\n                            <th className = \"text-center\">Điểm 15p</th>\r\n                            <th className = \"text-center\">Điểm  1 tiết</th>\r\n                            <th className = \"text-center\">Điểm thi</th>\r\n                            <th className = \"text-center\">Điểm trung bình</th>\r\n                            <th className = \"text-center\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { elmTasks}\r\n                        \r\n                    </tbody>\r\n                    </table>\r\n                    </div>      \r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskListStudents;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport TaskFormStudents from './components/TaskFormStudents'\r\nimport TaskListStudents from './components/TaskListStudents'\r\n\r\nclass Diem extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            taskDiem :[],\r\n            isDisplaySideBar : false,\r\n            isDisplayForm : false,\r\n            taskEditing: null\r\n        }\r\n    }\r\n    \r\n\r\n    onBar = () => {\r\n       this.setState({\r\n           isDisplaySideBar : !this.state.isDisplaySideBar\r\n       })\r\n    }\r\n    \r\n    onCancel = () => {\r\n        this.setState({\r\n            isDisplaySideBar : !this.state.isDisplaySideBar\r\n        })\r\n    }\r\n\r\n  \r\n\r\n    onCloseForm = () =>{\r\n        this.setState({\r\n            isDisplayForm : !this.state.isDisplayForm\r\n        })\r\n    }\r\n    onShowForm = () => {\r\n        this.setState({\r\n            isDisplayForm : true\r\n        })\r\n    }\r\n    /* LocalStorage  */\r\n    componentDidMount() {\r\n        if(localStorage && localStorage.getItem('taskDiem')){\r\n            var taskDiem = JSON.parse(localStorage.getItem('taskDiem'));\r\n            this.setState({\r\n                taskDiem: taskDiem\r\n            });\r\n        }\r\n    }\r\n\r\n   onReset = () => {\r\n       var taskDiem = [\r\n           \r\n           {\r\n            id: this.generateID(), \r\n            hoten: 'Hà Lan',\r\n            DM : null,\r\n            D15 : null,\r\n            D60 : null,\r\n            DT : null,\r\n            Tong: null\r\n\r\n        },\r\n        {   \r\n            id : this.generateID(),\r\n            hoten: 'Trần Đức Bo',\r\n            DM : null,\r\n            D15 : null,\r\n            D60 : null,\r\n            DT : null,\r\n            Tong: null\r\n\r\n        },\r\n        {   \r\n            id : this.generateID(),\r\n            hoten: 'Anh Ngạn',\r\n            DM : null,\r\n            D15 : null,\r\n            D60 : null,\r\n            DT : null,\r\n            Tong: null\r\n\r\n        },\r\n        {   \r\n            id : this.generateID(),\r\n            hoten: 'Hồ Thúy lan',\r\n            DM : null,\r\n            D15 : null,\r\n            D60 : null,\r\n            DT : null,\r\n            Tong: null\r\n\r\n        },\r\n        {   \r\n            id : this.generateID(),\r\n            hoten: 'Phan Tấn Trung',\r\n            DM : null,\r\n            D15 : null,\r\n            D60 : null,\r\n            DT : null,\r\n            Tong: null\r\n\r\n        }\r\n       ]\r\n       this.setState({\r\n           taskDiem : taskDiem\r\n       })\r\n       localStorage.setItem('taskDiem', JSON.stringify(taskDiem));\r\n   }\r\n    sinhdiem() {\r\n        return Math.round((Math.random()*10)*10)/10;\r\n    } \r\n    \r\n\r\n    s4() {\r\n        return Math.floor(1+Math.random() * 0x10000).toString(16).substring(1);\r\n    }  \r\n\r\n    generateID() {\r\n        return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' \r\n              + this.s4() + this.s4() + this.s4();\r\n    }\r\n    \r\n\r\n    onSubmit = (data) => {\r\n        \r\n        var {taskDiem } = this.state;\r\n        if(data.id ===''){\r\n            data.id = this.generateID();\r\n            // if(data.hoten !==''){\r\n            //     taskDiem.push(data);\r\n            // }\r\n            \r\n        }else {\r\n            //Editing\r\n            if(data.hoten !==''){\r\n                var index = this.findIndex(data.id);\r\n                taskDiem[index] = data;\r\n            }\r\n            \r\n         }\r\n        this.setState({\r\n            taskDiem : taskDiem\r\n        })\r\n        localStorage.setItem('taskDiem', JSON.stringify(taskDiem));\r\n        if(data.hoten !==''){\r\n        this.onCloseForm(); }\r\n    }\r\n\r\n    findIndex = (id) => {\r\n        var { taskDiem } = this.state;\r\n        var result = -1;\r\n        taskDiem.forEach((task,index) => {\r\n            if(task.id === id){\r\n                \r\n                result = index;\r\n            }\r\n         });\r\n         return result;\r\n    }\r\n\r\n    onDelete = (id) => {\r\n        var {taskDiem} = this.state;\r\n        var index = this.findIndex(id);\r\n        if(index !== -1 ){\r\n            taskDiem.splice(index, 1);\r\n            this.setState({\r\n                taskDiem : taskDiem\r\n            });\r\n            localStorage.setItem('taskDiem', JSON.stringify(taskDiem));\r\n        }\r\n        \r\n    }\r\n    \r\n    onUpdate = (id) => {\r\n        var {taskDiem} = this.state;\r\n        var index = this.findIndex(id);\r\n        var taskEditing = taskDiem[index];\r\n        this.setState({\r\n            taskEditing : taskEditing\r\n        })\r\n        this.onShowForm();\r\n    }\r\n\r\n        render(){\r\n\r\n            var  { isDisplaySideBar , isDisplayForm ,taskDiem, taskEditing } = this.state;\r\n            var elmTaskFromTeacher = isDisplayForm \r\n            ? <TaskFormStudents \r\n            onCloseForm = {this.onCloseForm}\r\n            onSubmit = {this.onSubmit}\r\n            taskDiem = {taskEditing}\r\n        /> \r\n            : \"\"\r\n        return (\r\n           \r\n                  \r\n\r\n                      \r\n                          <div className='Form-app-diem'>\r\n\r\n                            <div className=\"abc\">\r\n                                <div className=\"row\">\r\n                                    <h1>Quản lý điểm môn Toán lớp 10A1</h1>\r\n                                    <div className={isDisplayForm ? \"col-xs-12 col-sm-12 col-md-3 col-lg-3 mt-50\" : \"\"}>\r\n                                            { /* Form Add Teacher */ }\r\n                                        { elmTaskFromTeacher}\r\n                                        \r\n                                    </div>\r\n                                    \r\n                                    <div className= {isDisplayForm\r\n                                                ? \"col-xs-9 col-sm-9 col-md-9 col-lg-9 mt-50\" \r\n                                                : \"col-xs-12 col-sm-12 col-md-12 col-lg-12 mt-50\"}\r\n                                        //  className = {isDisplaySideBar === false \r\n                                        //         ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8 abcd mt-50\" \r\n                                        //         : \"col-xs-10 col-sm-10 col-md-10 col-lg-10 abcd mt-50\"}\r\n                                         >\r\n                                            \r\n                                            {/* <button type=\"button\" \r\n                                                    className=\"btn btn-primary mb-5 \"\r\n                                                    onClick = {this.onToggleForm}>\r\n                                                 <i className=\"fas fa-plus mr-5\"></i>\r\n                                                Thêm học sinh\r\n                                            </button>&nbsp; */}\r\n                                            \r\n                                            <button type=\"button\" \r\n                                                    className=\"btn btn-danger mb-5 \"\r\n                                                    onClick = {this.onReset}>\r\n                                                 \r\n                                                Làm mới điểm\r\n                                            </button>\r\n                                            \r\n                                           \r\n                                           <div class=\"panel panel-primary panel-diem\">\r\n                                                 <div class=\"panel-heading\">\r\n                                                       <h3 class=\"panel-title\">Giáo viên dạy: Hà Lan</h3>\r\n                                                 </div>\r\n                                                 <div class=\"panel-body\">\r\n                                                 \r\n                                            {/* Task List*/}\r\n                                            <TaskListStudents  taskDiem = {taskDiem}\r\n                                            onDelete = {this.onDelete}\r\n                                            onUpdate = {this.onUpdate}/>\r\n                                                 </div>\r\n                                           </div>\r\n                                           \r\n                                \r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                       \r\n                      </div>\r\n                      \r\n                \r\n         \r\n                \r\n                \r\n                \r\n                \r\n                \r\n            \r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Diem;","import React, { Component } from 'react';\r\n\r\n\r\nclass TaskFormMonHoc extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hoten: '',\r\n            isInputValid: true,\r\n            errorMessageHT: '' ,\r\n            errorMessageMonDay: ''\r\n        }\r\n    }\r\n    \r\n    onChange = (event) =>{\r\n        \r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value\r\n        this.onClear();\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n    \r\n    ValidationHT = (event) => {\r\n        if(this.state.hoten ===''){\r\n            this.setState({\r\n                isInputValid : !this.state.isInputValid,\r\n                errorMessage : 'Vui lòng nhập môn học'\r\n            })\r\n        }else {\r\n            this.setState({\r\n                isInputValid : this.state.isInputValid,\r\n                errorMessage : ''\r\n            })\r\n        }\r\n    }\r\n\r\n    \r\n   \r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        \r\n    }\r\n\r\n    onClear = () =>  {\r\n          this.setState({\r\n              hoten : ''\r\n          })\r\n    }\r\n    \r\n  \r\n        render(){\r\n        \r\n           \r\n        return (\r\n            <div className=\"panel panel-danger\">\r\n            <div className=\"panel-heading\">\r\n                  <h3 className=\"panel-title\">Thêm môn học\r\n                  </h3>\r\n            </div>\r\n            <div className=\"panel-body\">\r\n                   {/* Form input*/ }\r\n                   \r\n                   <form onSubmit = {this.onSubmit}>\r\n                       <div className=\"form-group invalid\">\r\n                           \r\n                           <input type=\"text\" className=\"form-control mt-10\" placeholder ='Tên môn học'\r\n                           name ='hoten'\r\n                           value = {this.state.hoten}\r\n                           onChange = {this.onChange}\r\n                           onBlur = {this.ValidationHT}\r\n                          />\r\n                            {this.state.hoten === '' ? <span style = {{color : 'red'}}>           \r\n                               {this.state.errorMessage}\r\n                            </span> : null }\r\n                       </div>\r\n                       \r\n                        <div className=\"text-center\">\r\n                            <button type=\"submit\" className=\"btn btn-warning\">\r\n                                    <i className =\"fa fa-plus mr-5\"></i>Lưu</button>&nbsp;\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick = {this.onClear}>\r\n                                    <i className=\"fas fa-times mr-5\"></i>Xóa</button>\r\n                        </div>\r\n                   </form>\r\n                   \r\n            </div>\r\n      </div>\r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskFormMonHoc;","import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass TaskItemMonHoc extends Component {\r\n     \r\n   \r\n    onDeleteMonHoc = () => {\r\n        this.props.onDeleteMonHoc(this.props.tasksS.id);\r\n    }\r\n        render(){\r\n        var {tasksS,index } = this.props;\r\n        return (\r\n                    <tr>\r\n                            \r\n                            <td className = \"text-center\">{index + 1}</td>\r\n                            <td className = \"text-center\">{tasksS.hoten}</td>\r\n                            \r\n                            \r\n                            <td className =\"text-center\">\r\n                                \r\n                                <button type=\"button\" className=\"btn btn-warning\">\r\n                                    <i className=\"fas fa-pencil-alt mr-5\"></i>\r\n                                    Sửa</button>&nbsp;\r\n                                <button type=\"button\" className=\"btn btn-danger\" onClick = {this.onDeleteMonHoc}>\r\n                                    <i className=\"fas fa-trash mr-5\"></i> \r\n                                    Xóa</button>\r\n                            </td>\r\n                    </tr>\r\n                         \r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskItemMonHoc;","import React, { Component } from 'react';\r\nimport TaskItemMonHoc from './TaskItemMonHoc'\r\n\r\n\r\nclass TaskListMonHoc extends Component {\r\n    \r\n\r\n        render(){\r\n        var {tasksS} = this.props\r\n        var elmTasksS = tasksS.map((tasksS, index) =>{\r\n                return <TaskItemMonHoc  key ={index} index = {index}  tasksS = {tasksS}\r\n                \r\n                             onDeleteMonHoc = {this.props.onDeleteMonHoc}/>\r\n        })\r\n           \r\n        return (\r\n               <div>\r\n                    <table className=\"table table-bordered table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className = 'text-center'>STT</th>\r\n                            <th className = 'text-center'>Môn học</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { elmTasksS}\r\n                        \r\n                    </tbody>\r\n                    </table>\r\n                    </div>      \r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TaskListMonHoc;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport TaskFormMonHoc from './components/TaskFormMonHoc'\r\nimport TaskListMonHoc from './components/TaskListMonHoc'\r\nimport Menu from './menu'\r\nclass MonHoc extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            tasksS :[],\r\n            isDisplaySideBar : false,\r\n            \r\n        }\r\n    }\r\n    \r\n\r\n    onCloseForm = () =>{\r\n        this.setState({\r\n            isDisplayForm : !this.state.isDisplayForm\r\n        })\r\n    }\r\n   \r\n    /* LocalStorage  */\r\n    componentDidMount() {\r\n        if(localStorage && localStorage.getItem('tasksS')){\r\n            var tasksS = JSON.parse(localStorage.getItem('tasksS'));\r\n            this.setState({\r\n                tasksS: tasksS\r\n            });\r\n        }\r\n    }\r\n\r\n   onReset = () => {\r\n       var tasksS = [\r\n           \r\n       ]\r\n       this.setState({\r\n           tasksS : tasksS\r\n       })\r\n       localStorage.setItem('tasksS', JSON.stringify(tasksS));\r\n   }\r\n    \r\n    \r\n\r\n    s4() {\r\n        return Math.floor(1+Math.random() * 0x10000).toString(16).substring(1);\r\n    }  \r\n\r\n    generateID() {\r\n        return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' \r\n              + this.s4() + this.s4() + this.s4();\r\n    }\r\n    \r\n\r\n    onSubmit = (data) => {\r\n        console.log(data);\r\n        var {tasksS } = this.state;\r\n        data.id = this.generateID();\r\n        if(data.hoten !==''){\r\n            tasksS.push(data);\r\n        }\r\n        this.setState({\r\n            tasksS : tasksS\r\n        })\r\n        localStorage.setItem('tasksS', JSON.stringify(tasksS));\r\n    }\r\n\r\n    \r\n\r\n\r\n    findIndex = (id) => {\r\n        var { tasksS } = this.state;\r\n        var result = -1;\r\n        tasksS.forEach((task,index) => {\r\n            if(task.id === id){\r\n                \r\n                result = index;\r\n            }\r\n         });\r\n         return result;\r\n    }\r\n\r\n    onDeleteMonHoc = (id) => {\r\n        var {tasksS} = this.state;\r\n        var index = this.findIndex(id);\r\n        if(index !== -1 ){\r\n            tasksS.splice(index, 1);\r\n            this.setState({\r\n                tasksS : tasksS\r\n            });\r\n            localStorage.setItem('tasksS', JSON.stringify(tasksS));\r\n        }\r\n        this.onCloseForm();\r\n    }\r\n        render(){\r\n\r\n            var  { isDisplaySideBar , isDisplayForm ,tasksS } = this.state;\r\n            \r\n            // onCloseForm = {this.onCloseForm}\r\n            // onSubmit = {this.onSubmit}\r\n        // /> \r\n            // : \"\"\r\n        return (\r\n\r\n                    <div className='Form-app-monhoc'>\r\n                            <div className=\"abc\">\r\n                                <div className=\"row\">\r\n                                <h1 className='text-center'>Quản lý môn học</h1>\r\n                                    <div className=\"col-xs-12 col-sm-5 col-md-4 col-lg-4 mt-50\">\r\n                                            { /* Form Add Teacher */ }\r\n                                        <TaskFormMonHoc onCloseForm = {this.onCloseForm}\r\n                                                        onSubmit = {this.onSubmit}\r\n                                                        onClearAdd ={this.onClearAdd}/>\r\n                                        \r\n                                    </div>\r\n                                    \r\n                                    <div className=  \"col-xs-12 col-sm-8 col-md-8 col-lg-8 mt-50\" \r\n                                                \r\n                                        //  className = {isDisplaySideBar === false \r\n                                        //         ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8 abcd mt-50\" \r\n                                        //         : \"col-xs-10 col-sm-10 col-md-10 col-lg-10 abcd mt-50\"}\r\n                                         >\r\n                                            \r\n                                            \r\n                                            <div className=\"panel panel-primary panel-class\">\r\n                                                  <div className=\"panel-heading\">\r\n                                                        <h3 className=\"panel-title\">Danh sách môn học</h3>\r\n                                                  </div>\r\n                                                  <div className=\"panel-body\">\r\n                                                        {/* Task List*/}\r\n                                            <TaskListMonHoc  tasksS = {tasksS}\r\n                                                           \r\n                                                           onDeleteMonHoc = {this.onDeleteMonHoc}/>\r\n                                                  </div>\r\n                                            </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                       </div>\r\n\r\n                \r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default MonHoc;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Teacher from './Teacher'\r\nimport QuanLyDiem from './QuanlyDiem'\r\nimport Monhoc from './QuanLyMonHoc'\r\nimport MonHoc from './QuanLyMonHoc';\r\nimport Diem from './QuanlyDiem';\r\nclass Menu extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isDisplaySideBar : false,\r\n            isShow : -1 // -1 : Điểm , 0 : môn học , 1 : Giáo viên\r\n        }\r\n    }\r\n    isShowDiem = () => {\r\n        this.setState({\r\n            isShow : -1\r\n        })\r\n   }\r\n    \r\n    isShowMonHoc = () => {\r\n         this.setState({\r\n             isShow : 0\r\n         })\r\n    }\r\n\r\n    isShowTeacher = () => {\r\n        this.setState({\r\n            isShow : 1\r\n        })\r\n   }\r\n\r\n    onBar = () => {\r\n       this.setState({\r\n           isDisplaySideBar : !this.state.isDisplaySideBar\r\n       })\r\n    }\r\n    \r\n    onCancel = () => {\r\n        this.setState({\r\n            isDisplaySideBar : !this.state.isDisplaySideBar\r\n        })\r\n    }\r\n\r\n        render(){\r\n            var {isShow} = this.state\r\n           \r\n        return (\r\n            <div>\r\n\r\n            \r\n                            <input type='checkbox' id='check'/>\r\n                        <label htmlFor=\"check\">\r\n                            <i className= \"fas fa-bars\" id= \"btn\" onClick = {this.onBar}></i>\r\n                            <i className=\"fas fa-times\" id=\"cancel\" onClick = {this.onCancel} ></i>\r\n                        </label>\r\n                        <div className='sidebar'>\r\n                            <header>Menu</header>\r\n                            <ul>\r\n                                <li><a>Trang chủ</a></li>\r\n                                <li><a onClick = {this.isShowTeacher}\r\n                                >Quản lý giáo viên</a></li>\r\n                                <li><a onClick = {this.isShowDiem}\r\n                                >Quản lý điểm</a></li>\r\n                                <li><a onClick = {this.isShowMonHoc}\r\n                                 >Quản lý môn học</a></li>\r\n                            </ul>\r\n                        </div> \r\n\r\n                             {/* if({this.state.isShow === 1}){\r\n                                 <Teacher />\r\n                             }else if ({this.state.isShow === 0}) {\r\n                                 <MonHoc />\r\n                             }else {\r\n                                 <Diem />\r\n                             } */}\r\n                        \r\n                       {this.state.isShow === 0 ? <MonHoc /> : <Diem />}\r\n            </div>       \r\n                \r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Menu;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Menu from './menu'\nReactDOM.render(\n  \n  <React.StrictMode><Menu /></React.StrictMode>,document.getElementById('root')\n  \n  \n);\n// ReactDOM.render(\n  \n//   <React.StrictMode><Menu /></React.StrictMode>,document.getElementById('menu')\n  \n  \n// );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}